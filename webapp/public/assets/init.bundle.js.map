{"version":3,"sources":["webpack:///init.bundle.js","webpack:///webpack/bootstrap d74bf4a64a9911875d0e","webpack:///../js/app.init.js","webpack:///../js/app.logger.js","webpack:///../js/vendor/logentries/le.js","webpack:///../js/window.assert.js","webpack:///../~/webpack/buildin/amd-define.js","webpack:///../js/window.logger.js","webpack:///../js/app.config.jsx","webpack:///../js/app.support.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p",0,200,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","f","define","apply","undefined","LE","window","app","LEVELS","DEBUG","NAME","VALUE","INFO","WARN","ERROR","CRIT","DEFAULT","logger","token","level","init","ssl","catchall","trace","page_info","print","_debug","entry","setTimeout","log","_info","info","_warn","warn","_error","error","_crit",201,"root","factory","this","LogStream","options","_endpoint","_traceCode","Math","random","PI","toString","substring","_pageInfo","_token","_print","_SSL","XDomainRequest","location","protocol","LEENDPOINT","_shouldCall","_backlog","_active","_sentPageInfo","oldHandler","onerror","newHandler","msg","url","line","_rawLog","send","_agentInfo","nav","navigator","doNotTrack","screen","pathname","referrer","document","width","height","innerWidth","innerHeight","browser","name","appName","version","appVersion","cookie_enabled","cookieEnabled","do_not_track","platform","_getEvent","raw","args","Array","prototype","slice","arguments","length","Error","event","data","l","console","serialized","toLowerCase","ex","cache","JSON","stringify","key","value","_indexOf","push","_apiCall","request","_getAjaxObject","constructor","XMLHttpRequest","onreadystatechange","readyState","status","shift","onload","open","setRequestHeader","overrideMimeType","Logger","dict","endpoint","k","_log","array","obj","i","loggers","_getLogger","hasOwnProperty","_createLogStream","_deprecatedInit","_destroyLogStream","createLogStream","to","destroy",202,"STRING","OBJECT","FUNCTION","UNDEFINED","class2type","split","forEach","hasOwn","$","isArray","isFunction","type","isEmptyObject","isNumeric","parseFloat","isPlainObject","nodeType","isWindow","assert","test","message","indexOf","RangeError","equal","expected","actual","Class","TypeError","isOptionalObject","isUndefined","match","rx","ok","messages","enum","default","instanceof",203,204,"LINEFEEDS","LINESEP","EQUAL","FIRST","SEPARATOR","preProcess","logEntry","ErrorEvent","filename","lineno","colno","Object","parse","enhance","originalError","original","stack","replace","String","toUpperCase","keys","input","getElementById","HTMLInputElement","log2Console","first","method","exception","_module","debug","crit","e","gl",520,"format","uris","cdn","svg","office","white","dark_grey","webapp","home","feed","sitemap","pages","posts",521,"is","testRunner","featureNames","feature","aliasIdx","result","nameIdx","featureName","featureNameSplit","featureIdx","tests","aliases","fn","Modernizr","Boolean","classes","join","contains","str","substr","cssToDOM","m1","m2","fnBind","that","testDOMProps","props","elem","item","domToCSS","getBody","body","createElement","fake","injectElementWithStyles","rule","callback","nodes","testnames","style","ret","node","docOverflow","mod","div","parseInt","appendChild","innerHTML","background","overflow","docElement","parentNode","removeChild","offsetHeight","nativeTestProps","CSS","supports","conditionText","getComputedStyle","position","testProps","prefixed","skipValueTest","cleanElems","afterInit","mStyle","modElem","propsLength","prop","before","testPropsAll","ucProp","charAt","cssomPrefixes","testAllProps","ModernizrProto","_version","_config","classPrefix","enableClasses","enableJSClass","usePrefixes","_q","on","cb","self","addTest","addAsyncTest","localStorage","setItem","removeItem","sessionStorage","createElementNS","createSVGRect","getContext","bool","canPlayType","ogg","mp3","opus","wav","m4a","h264","webm","vp9","hls","omPrefixes","_cssomPrefixes","domPrefixes","_domPrefixes","unshift","documentElement","userAgent","prefixes","_prefixes","testStyles","DocumentTouch","query","offsetTop","isEventSupported","isEventSupportedInner","eventName","element","isSupported","needsFallback","setAttribute","removeAttribute","hasEvent","documentMode","support"],"mappings":"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","file":"init.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"http://localhost:3000/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n\t * Sources at https://github.com/Memba\n\t */\n\t\n\t/* jshint browser: true */\n\t/* globals require: false, process: false */\n\t\n\tif (true) {\n\t    __webpack_require__(520);\n\t    __webpack_require__(200);\n\t    __webpack_require__(521);\n\t}\n\t\n\t// TODO Consider javascript disabled\n\t// TODO use app.support to display a message for older browsers\n\n\n/***/ },\n\n/***/ 200:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n\t * Sources at https://github.com/Memba\n\t */\n\t\n\t/* jshint browser: true */\n\t/* globals define: false */\n\t\n\t(function (f, define) {\n\t    'use strict';\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(201), // <-- Keep first\n\t        __webpack_require__(202),\n\t        __webpack_require__(204)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function (LE) {\n\t\n\t    'use strict';\n\t\n\t    // Depending how le.js is loaded\n\t    // We need `LE` for webpack and `window.LE` for grunt mocha\n\t    LE = LE || window.LE;\n\t\n\t    (function (undefined) {\n\t\n\t        var app = window.app = window.app || {};\n\t        var LEVELS = {\n\t            // See https://github.com/logentries/le_node#log-levels\n\t            DEBUG: { NAME: 'DEBUG', VALUE: 1 },\n\t            INFO: { NAME: 'INFO', VALUE: 2 },\n\t            WARN: { NAME: 'WARN', VALUE: 4 },\n\t            ERROR: { NAME: 'ERROR', VALUE: 5 },\n\t            CRIT: { NAME: 'CRIT', VALUE: 6 }\n\t        };\n\t        var DEFAULT = LEVELS.INFO;\n\t        var logger = app.logger = app.logger || {\n\t            token: 'e78bac0b-377a-49e2-ad91-20bb4ec7cedc', // Our localhost value (basically junk)\n\t            level: DEFAULT.VALUE\n\t        };\n\t\n\t        /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n\t\n\t        /**\n\t         * Intialize LogEntries\n\t         * @see https://logentries.com/doc/javascript/\n\t         * @see https://github.com/logentries/le_js\n\t         */\n\t        LE.init({\n\t            token: logger.token,\n\t            ssl: true,\n\t            /**\n\t             * Important: catchall: true is equivalent to setting window.onerror\n\t             * See https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror\n\t             */\n\t            catchall: false, // we have our own global handler in window.logger\n\t            trace: false, // not as good as our own trace\n\t            page_info: 'never', // does not work - see https://github.com/logentries/le_js/issues/41\n\t            print: false // let's print to the console ourselves in window.logger\n\t        });\n\t\n\t        /* jscs:enable requireCamelCaseOrUpperCaseIdentifiers */\n\t\n\t        /**\n\t         * IMPORTANT: the following functions are prefixed with underscores\n\t         * because they should not be called, i.e. always call window.logger\n\t         */\n\t\n\t        /**\n\t         * Log a debug entry\n\t         * @param entry\n\t         */\n\t        logger._debug = function (entry) {\n\t            if (logger.level > LEVELS.DEBUG.VALUE) {\n\t                return false;\n\t            }\n\t            setTimeout(function () {\n\t                // Note: LE has no debug logging as of June 2015\n\t                LE.log(entry);\n\t            }, 0);\n\t            return true;\n\t        };\n\t\n\t        /**\n\t         * Log an info entry\n\t         * @param entry\n\t         */\n\t        logger._info = function (entry) {\n\t            if (logger.level > LEVELS.INFO.VALUE) {\n\t                return false;\n\t            }\n\t            setTimeout(function () {\n\t                LE.info(entry);\n\t            }, 0);\n\t            return true;\n\t        };\n\t\n\t        /**\n\t         * Log a warn entry\n\t         * @param entry\n\t         */\n\t        logger._warn = function (entry) {\n\t            if (logger.level > LEVELS.WARN.VALUE) {\n\t                return false;\n\t            }\n\t            setTimeout(function () {\n\t                LE.warn(entry);\n\t            }, 0);\n\t            return true;\n\t        };\n\t\n\t        /**\n\t         * Log an error entry (the application can survive an error entry)\n\t         * @param entry\n\t         */\n\t        logger._error = function (entry) {\n\t            if (logger.level > LEVELS.ERROR.VALUE) {\n\t                return false;\n\t            }\n\t            setTimeout(function () {\n\t                LE.error(entry);\n\t            }, 0);\n\t            return true;\n\t        };\n\t\n\t        /**\n\t         * Log a critical entry (the application cannot survive a critical entry)\n\t         * @param entry\n\t         */\n\t        logger._crit = function (entry) {\n\t            if (logger.level > LEVELS.CRIT.VALUE) {\n\t                return false;\n\t            }\n\t            setTimeout(function () {\n\t                // Note: LE has no critical logging as of June 2015\n\t                LE.error(entry);\n\t            }, 0);\n\t            return true;\n\t        };\n\t\n\t    }());\n\t\n\t    return window.app;\n\t\n\t}, __webpack_require__(203));\n\n\n/***/ },\n\n/***/ 201:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * @license Copyright 2013 Logentries.\n\t * Please view license at https://raw.github.com/logentries/le_js/master/LICENSE\n\t */\n\t\n\t/*jslint browser:true*/\n\t/*global define, module, exports, console, global */\n\t\n\t/** @param {Object} window */\n\t(function (root, factory) {\n\t    if (true) {\n\t        // AMD. Register as an anonymous module.\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t            return factory(root);\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        // Node. Does not work with strict CommonJS, but\n\t        // only CommonJS-like environments that support module.exports,\n\t        // like Node.\n\t        if (typeof global === 'object') {\n\t            // Browserify. The calling object `this` does not reference window.\n\t            // `global` and `this` are equivalent in Node, preferring global\n\t            // adds support for Browserify.\n\t            root = global;\n\t        }\n\t        module.exports = factory(root);\n\t    } else {\n\t        // Browser globals (root is window)\n\t        root.LE = factory(root);\n\t    }\n\t}(this, function (window) {\n\t    \"use strict\";\n\t    // cross-browser indexOf fix\n\t    var _indexOf = function (array, obj) {\n\t        for (var i = 0; i < array.length; i++) {\n\t            if (obj === array[i]) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t\n\t    // Obtain a browser-specific XHR object\n\t    var _getAjaxObject = function () {\n\t        if (typeof XDomainRequest !== \"undefined\") {\n\t            // We're using IE8/9\n\t            return new XDomainRequest();\n\t        }\n\t        return new XMLHttpRequest();\n\t    };\n\t\n\t    /**\n\t     * A single log event stream.\n\t     * @constructor\n\t     * @param {Object} options\n\t     */\n\t    function LogStream(options) {\n\t        /**\n\t         * @const\n\t         * @type {string} */\n\t        var _traceCode = options.trace ? (Math.random() + Math.PI).toString(36).substring(2, 10) : null;\n\t        /** @type {string} */\n\t        var _pageInfo = options.page_info;\n\t        /** @type {string} */\n\t        var _token = options.token;\n\t        /** @type {boolean} */\n\t        var _print = options.print;\n\t        /** @type {boolean} */\n\t        var _SSL = function() {\n\t            if (typeof XDomainRequest === \"undefined\") {\n\t                return options.ssl;\n\t            }\n\t            // If we're relying on XDomainRequest, we\n\t            // must adhere to the page's encryption scheme.\n\t            return window.location.protocol === \"https:\" ? true : false;\n\t        }();\n\t        /** @type {string} */\n\t        var _endpoint;\n\t        if (window.LEENDPOINT) {\n\t            _endpoint = window.LEENDPOINT;\n\t        } else {\n\t            _endpoint = \"js.logentries.com/v1\";\n\t        }\n\t        _endpoint = (_SSL ? \"https://\" : \"http://\") + _endpoint + \"/logs/\" + _token;\n\t\n\t        /**\n\t         * Flag to prevent further invocations on network err\n\t         ** @type {boolean} */\n\t        var _shouldCall = true;\n\t        /** @type {Array.<string>} */\n\t        var _backlog = [];\n\t        /** @type {boolean} */\n\t        var _active = false;\n\t        /** @type {boolean} */\n\t        var _sentPageInfo = false;\n\t\n\t        if (options.catchall) {\n\t            var oldHandler = window.onerror;\n\t            var newHandler = function(msg, url, line) {\n\t                _rawLog({error: msg, line: line, location: url}).level('ERROR').send();\n\t                if (oldHandler) {\n\t                    return oldHandler(msg, url, line);\n\t                } else {\n\t                    return false;\n\t                }\n\t            };\n\t            window.onerror = newHandler;\n\t        }\n\t\n\t        var _agentInfo = function() {\n\t            var nav = window.navigator || {doNotTrack: undefined};\n\t            var screen = window.screen || {};\n\t            var location = window.location || {};\n\t\n\t            return {\n\t              url: location.pathname,\n\t              referrer: document.referrer,\n\t              screen: {\n\t                width: screen.width,\n\t                height: screen.height\n\t              },\n\t              window: {\n\t                width: window.innerWidth,\n\t                height: window.innerHeight\n\t              },\n\t              browser: {\n\t                name: nav.appName,\n\t                version: nav.appVersion,\n\t                cookie_enabled: nav.cookieEnabled,\n\t                do_not_track: nav.doNotTrack\n\t              },\n\t              platform: nav.platform\n\t            };\n\t        };\n\t\n\t        var _getEvent = function() {\n\t            var raw = null;\n\t            var args = Array.prototype.slice.call(arguments);\n\t            if (args.length === 0) {\n\t                throw new Error(\"No arguments!\");\n\t            } else if (args.length === 1) {\n\t                raw = args[0];\n\t            } else {\n\t                // Handle a variadic overload,\n\t                // e.g. _rawLog(\"some text \", x, \" ...\", 1);\n\t              raw = args;\n\t            }\n\t            return raw;\n\t        };\n\t\n\t        // Single arg stops the compiler arity warning\n\t        var _rawLog = function(msg) {\n\t            var event = _getEvent.apply(this, arguments);\n\t\n\t            var data = {event: event};\n\t\n\t            // Add agent info if required\n\t            if (_pageInfo !== 'never') {\n\t                if (!_sentPageInfo || _pageInfo === 'per-entry') {\n\t                    _sentPageInfo = true;\n\t                    if (typeof event.screen === \"undefined\" &&\n\t                        typeof event.browser === \"undefined\")\n\t                      _rawLog(_agentInfo()).level('PAGE').send();\n\t                }\n\t            }\n\t\n\t            if (_traceCode) {\n\t                data.trace = _traceCode;\n\t            }\n\t\n\t            return {level: function(l) {\n\t                // Don't log PAGE events to console\n\t                // PAGE events are generated for the agentInfo function\n\t                    if (_print && typeof console !== \"undefined\" && l !== 'PAGE') {\n\t                      var serialized = null;\n\t                      if (typeof XDomainRequest !== \"undefined\") {\n\t                        // We're using IE8/9\n\t                        serialized = data.trace + ' ' + data.event;\n\t                      }\n\t                      try {\n\t                        console[l.toLowerCase()].call(console, (serialized || data));\n\t                      } catch (ex) {\n\t                        // IE compat fix\n\t                        console.log((serialized || data));\n\t                      }\n\t                    }\n\t                    data.level = l;\n\t\n\t                    return {send: function() {\n\t                        var cache = [];\n\t                        var serialized = JSON.stringify(data, function(key, value) {\n\t\n\t                              if (typeof value === \"undefined\") {\n\t                                return \"undefined\";\n\t                              } else if (typeof value === \"object\" && value !== null) {\n\t                                if (_indexOf(cache, value) !== -1) {\n\t                                  // We've seen this object before;\n\t                                  // return a placeholder instead to prevent\n\t                                  // cycles\n\t                                  return \"<?>\";\n\t                                }\n\t                                cache.push(value);\n\t                              }\n\t                          return value;\n\t                        });\n\t\n\t                            if (_active) {\n\t                                _backlog.push(serialized);\n\t                            } else {\n\t                                _apiCall(_token, serialized);\n\t                            }\n\t                        }};\n\t                }};\n\t        };\n\t\n\t        /** @expose */\n\t        this.log = _rawLog;\n\t\n\t        var _apiCall = function(token, data) {\n\t            _active = true;\n\t\n\t            var request = _getAjaxObject();\n\t\n\t            if (_shouldCall) {\n\t                if (request.constructor === XMLHttpRequest) {\n\t                    // Currently we don't support fine-grained error\n\t                    // handling in older versions of IE\n\t                    request.onreadystatechange = function() {\n\t                    if (request.readyState === 4) {\n\t                        // Handle any errors\n\t                        if (request.status >= 400) {\n\t                            console.error(\"Couldn't submit events.\");\n\t                            if (request.status === 410) {\n\t                                // This API version has been phased out\n\t                                console.warn(\"This version of le_js is no longer supported!\");\n\t                            }\n\t                        } else {\n\t                            if (request.status === 301) {\n\t                                // Server issued a deprecation warning\n\t                                console.warn(\"This version of le_js is deprecated! Consider upgrading.\");\n\t                            }\n\t                            if (_backlog.length > 0) {\n\t                                // Submit the next event in the backlog\n\t                                _apiCall(token, _backlog.shift());\n\t                            } else {\n\t                                _active = false;\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    };\n\t                } else {\n\t                  request.onload = function() {\n\t                    if (_backlog.length > 0) {\n\t                      // Submit the next event in the backlog\n\t                      _apiCall(token, _backlog.shift());\n\t                    } else {\n\t                      _active = false;\n\t                    }\n\t                  };\n\t                }\n\t\n\t                request.open(\"POST\", _endpoint, true);\n\t                if (request.constructor === XMLHttpRequest) {\n\t                    request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t                    request.setRequestHeader('Content-type', 'application/json');\n\t                }\n\t                \n\t                if (request.overrideMimeType) {\n\t                    request.overrideMimeType('text');\n\t                }\n\t\n\t                request.send(data);\n\t            }\n\t        };\n\t    }\n\t\n\t    /**\n\t     * A single log object\n\t     * @constructor\n\t     * @param {Object} options\n\t     */\n\t    function Logger(options) {\n\t        var logger;\n\t\n\t        // Default values\n\t        var dict = {\n\t            ssl: true,\n\t            catchall: false,\n\t            trace: true,\n\t            page_info: 'never',\n\t            print: false,\n\t            endpoint: null,\n\t            token: null\n\t        };\n\t\n\t        if (typeof options === \"object\")\n\t            for (var k in options)\n\t                dict[k] = options[k];\n\t        else\n\t            throw new Error(\"Invalid parameters for createLogStream()\");\n\t\n\t        if (dict.token === null) {\n\t            throw new Error(\"Token not present.\");\n\t        } else {\n\t            logger = new LogStream(dict);\n\t        }\n\t\n\t        var _log = function(msg) {\n\t            if (logger) {\n\t                return logger.log.apply(this, arguments);\n\t            } else\n\t                throw new Error(\"You must call LE.init(...) first.\");\n\t        };\n\t\n\t         // The public interface\n\t        return {\n\t            log: function() {\n\t                _log.apply(this, arguments).level('LOG').send();\n\t            },\n\t            warn: function() {\n\t                _log.apply(this, arguments).level('WARN').send();\n\t            },\n\t            error: function() {\n\t                _log.apply(this, arguments).level('ERROR').send();\n\t            },\n\t            info: function() {\n\t                _log.apply(this, arguments).level('INFO').send();\n\t            }\n\t        };\n\t    }\n\t\n\t    // Array of Logger elements\n\t    var loggers = {};\n\t\n\t    var _getLogger = function(name) {\n\t        if (!loggers.hasOwnProperty(name))\n\t           throw new Error(\"Invalid name for logStream\");\n\t\n\t        return loggers[name];\n\t    };\n\t\n\t    var  _createLogStream = function(options) {\n\t        if (typeof options.name !== \"string\")\n\t            throw new Error(\"Name not present.\");\n\t        else if (loggers.hasOwnProperty(options.name))\n\t            throw new Error(\"A logger with that name already exists!\");\n\t        loggers[options.name] = new Logger(options);\n\t\n\t        return true;\n\t    };\n\t\n\t    var _deprecatedInit = function(options) {\n\t        var dict = {\n\t            name : \"default\"\n\t        };\n\t\n\t        if (typeof options === \"object\")\n\t            for (var k in options)\n\t                dict[k] = options[k];\n\t        else if (typeof options === \"string\")\n\t            dict.token = options;\n\t        else\n\t            throw new Error(\"Invalid parameters for init()\");\n\t\n\t        return _createLogStream(dict);\n\t    };\n\t\n\t    var _destroyLogStream = function(name) {\n\t        if (typeof name === 'undefined'){\n\t            name = 'default';\n\t        }\n\t\n\t        delete loggers[name];\n\t    };\n\t\n\t    // The public interface\n\t    return {\n\t        init: _deprecatedInit,\n\t        createLogStream: _createLogStream,\n\t        to: _getLogger,\n\t        destroy: _destroyLogStream,\n\t        log: function() {\n\t            for (var k in loggers)\n\t                loggers[k].log.apply(this, arguments);\n\t        },\n\t        warn: function() {\n\t            for (var k in loggers)\n\t                loggers[k].warn.apply(this, arguments);\n\t        },\n\t        error: function() {\n\t            for (var k in loggers)\n\t                loggers[k].error.apply(this, arguments);\n\t        },\n\t        info: function() {\n\t            for (var k in loggers)\n\t                loggers[k].info.apply(this, arguments);\n\t        }\n\t    };\n\t}));\n\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n\t * Sources at https://github.com/Memba\n\t */\n\t\n\t/* jshint browser: true, jquery: true */\n\t/* globals define: false */\n\t\n\t(function (f, define) {\n\t    'use strict';\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function () {\n\t\n\t    'use strict';\n\t\n\t    (function (undefined) {\n\t\n\t        var STRING = 'string';\n\t        var OBJECT = 'object';\n\t        var FUNCTION = 'function';\n\t        var UNDEFINED = 'undefined';\n\t\n\t        // Populate the class2type map\n\t        var class2type = {};\n\t        'Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' ').forEach(function (name) {\n\t            class2type[ '[object ' + name + ']' ] = name.toLowerCase();\n\t        });\n\t        var toString = class2type.toString;\n\t        var hasOwn = class2type.hasOwnProperty;\n\t\n\t        // jQuery core functions to remove any dependencies\n\t        // @see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/core.js\n\t        var $ = {\n\t            isArray: Array.isArray,\n\t            isFunction: function (obj) {\n\t                return $.type(obj) === FUNCTION;\n\t            },\n\t            isEmptyObject: function (obj) {\n\t                var name;\n\t                for (name in obj) {\n\t                    return false;\n\t                }\n\t                return true;\n\t            },\n\t            isNumeric: function (obj) {\n\t                // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t                // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t                // subtraction forces infinities to NaN\n\t                // adding 1 corrects loss of precision from parseFloat (#15100)\n\t                return !$.isArray(obj) && (obj - parseFloat(obj) + 1) >= 0;\n\t            },\n\t            isPlainObject: function (obj) {\n\t                // Not plain objects:\n\t                // - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t                // - DOM nodes\n\t                // - window\n\t                if ($.type(obj) !== OBJECT || obj.nodeType || $.isWindow(obj)) {\n\t                    return false;\n\t                }\n\t                if (obj.constructor && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n\t                    return false;\n\t                }\n\t                // If the function hasn't returned already, we're confident that\n\t                // |obj| is a plain object, created by {} or constructed with new Object\n\t                return true;\n\t            },\n\t            isWindow: function (obj) {\n\t                return obj !== null && obj === obj.window;\n\t            },\n\t            type: function (obj) {\n\t                if (obj === null) {\n\t                    return obj + '';\n\t                }\n\t                // Support: Android<4.0 (functionish RegExp)\n\t                return typeof obj === OBJECT || typeof obj === FUNCTION ? class2type[toString.call(obj)] || OBJECT : typeof obj;\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Asserts\n\t         * Note: Use asserts where unmet conditions are independent from user entries, and\n\t         * developers should be warned that there is probably something unexpected in their code\n\t         */\n\t        var assert = window.assert = function (test, message) {\n\t            if (!test) { throw new Error(message); }\n\t        };\n\t\n\t        // By extending assert, we ensure we can call both assert() and assert.ok() for the same result (like in nodeJS)\n\t\n\t        /**\n\t         * Assert enumeration\n\t         * @param array\n\t         * @param value\n\t         * @param message\n\t         */\n\t        assert.enum = function (array, value, message) {\n\t            if (array.indexOf(value) === -1) {\n\t                throw new RangeError(message);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Assert equal\n\t         * @param expected\n\t         * @param actual\n\t         * @param message\n\t         */\n\t        assert.equal = function (expected, actual, message) {\n\t            if (expected !== actual) {\n\t                throw new RangeError(message);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Assert instance of\n\t         * @param Class\n\t         * @param value\n\t         * @param message\n\t         */\n\t        assert.instanceof = function (Class, value, message) {\n\t            if (!(value instanceof Class)) {\n\t                throw new TypeError(message);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Assert optional object (can be undefined but mot an empty object, i.e. {})\n\t         * @param value\n\t         * @param message\n\t         */\n\t        assert.isOptionalObject = function (value, message) {\n\t            if ($.type(value) !== UNDEFINED && (!$.isPlainObject(value) || $.isEmptyObject(value))) {\n\t                throw new TypeError(message);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Assert a plain object (not empty)\n\t         * @param value\n\t         * @param message\n\t         */\n\t        assert.isPlainObject = function (value, message) {\n\t            if (!$.isPlainObject(value) || $.isEmptyObject(value)) {\n\t                throw new TypeError(message);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Assert undefined\n\t         * @param value\n\t         * @param message\n\t         */\n\t        assert.isUndefined = function (value, message) {\n\t            if ($.type(value) !== UNDEFINED) {\n\t                throw new TypeError(message);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Assert regular expression match\n\t         * @param rx\n\t         * @param value\n\t         * @param message\n\t         */\n\t        assert.match = function (rx, value, message) {\n\t            if ($.type(value) !== STRING || !rx.test(value)) {\n\t                throw new RangeError(message);\n\t            }\n\t        };\n\t\n\t        /**\n\t         * Assert true condition\n\t         * @param test\n\t         * @param message\n\t         * @returns {*}\n\t         */\n\t        assert.ok = function (test, message) {\n\t            return assert(test, message);\n\t        };\n\t\n\t        /**\n\t         * Assert type\n\t         * @param type\n\t         * @param value\n\t         * @param message\n\t         */\n\t        assert.type = function (type, value, message) {\n\t            if ($.type(value) !== type) {\n\t                throw new TypeError(message);\n\t            }\n\t        };\n\t\n\t        assert.messages = {\n\t            enum: {\n\t                default: '`{0}` is expected to be any of `{1}`'\n\t            },\n\t            equal: {\n\t                default: '`{0}` is expected to equal `{1}`'\n\t            },\n\t            instanceof: {\n\t                default: '`{0}` is expected to be an instance of `{1}`'\n\t            },\n\t            isOptionalObject: {\n\t                default: '`{0}` is expected to be undefined or a plain object'\n\t            },\n\t            isPlainObject: {\n\t                default: '`{0}` is expected to be a plain object'\n\t            },\n\t            isUndefined: {\n\t                default: '`{0}` is expected to be undefined'\n\t            },\n\t            match: {\n\t                default: '`{0}` is expected to match `{1}`'\n\t            },\n\t            ok: {\n\t                default: 'A statement is expected to be true'\n\t            },\n\t            type: {\n\t                default: '`{0}` is expected to have type `{1}`'\n\t            }\n\t        };\n\t\n\t    }());\n\t\n\t    return window.assert;\n\t\n\t}, __webpack_require__(203));\n\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n\t * Sources at https://github.com/Memba\n\t */\n\t\n\t/* jshint browser: true, jquery: true */\n\t/* globals define: false */\n\t\n\t(function (f, define) {\n\t    'use strict';\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function () {\n\t\n\t    'use strict';\n\t\n\t    (function (undefined) {\n\t\n\t        var app = window.app = window.app || {};\n\t        var STRING = 'string';\n\t        var FUNCTION = 'function';\n\t        var UNDEFINED = 'undefined';\n\t        var LEVELS = {\n\t            // See https://github.com/logentries/le_node#log-levels\n\t            DEBUG: { NAME: 'DEBUG', VALUE: 1 },\n\t            INFO: { NAME: 'INFO', VALUE: 2 },\n\t            WARN: { NAME: 'WARN', VALUE: 4 },\n\t            ERROR: { NAME: 'ERROR', VALUE: 5 },\n\t            CRIT: { NAME: 'CRIT', VALUE: 6 }\n\t        };\n\t        var DEFAULT = LEVELS.INFO;\n\t        var LINEFEEDS = /\\n/g;\n\t        var LINESEP = '; ';\n\t        var EQUAL = ' = ';\n\t        var FIRST = '\\t';\n\t        var SEPARATOR = '\\t'; // '  |  ';\n\t\n\t        /**\n\t         * Logger class\n\t         * @class Logger\n\t         */\n\t        var Logger = window.Logger = function (module/*, appLogger*/) {\n\t\n\t            this._module = module;\n\t            this.level = DEFAULT.VALUE;\n\t\n\t            /**\n\t             * Preprocess message + data\n\t             * @param message\n\t             * @param data\n\t             */\n\t            function preProcess(message, data) {\n\t                if (typeof message !== STRING && typeof data !== UNDEFINED) {\n\t                    throw new TypeError('Unexpected data when message is not a string');\n\t                }\n\t                var logEntry;\n\t                if (typeof message === STRING) {\n\t                    logEntry = { message: message, data: data };\n\t                } else if (message instanceof window.Error) {\n\t                    logEntry = {\n\t                        message: message.message,\n\t                        error: message\n\t                    };\n\t                } else if (typeof window.ErrorEvent === FUNCTION && message instanceof window.ErrorEvent) {\n\t                    // window.ErrorEvent does not exist in PhantomJS\n\t                    logEntry = {\n\t                        message: message.message,\n\t                        data: { filename: message.filename, lineno: message.lineno, colno: message.colno },\n\t                        error: message.error\n\t                    };\n\t                } else if (Object.prototype.toString.call(message) === '[object Object]') {\n\t                    logEntry = JSON.parse(JSON.stringify(message));\n\t                    if (message.error instanceof Error) {\n\t                        // We need to do that because JSON.stringify(new Error('Oops)) === {}\n\t                        logEntry.error = message.error;\n\t                    }\n\t                } else {\n\t                    logEntry = { data: message };\n\t                }\n\t                return logEntry;\n\t            }\n\t\n\t            /**\n\t             * Enhance a log entry\n\t             * @param logEntry\n\t             * @param module\n\t             * @param level\n\t             */\n\t            function enhance(logEntry, module, level) {\n\t                if (Object.prototype.toString.call(logEntry) !== '[object Object]') {\n\t                    throw new TypeError('logEntry is expected to be an object');\n\t                }\n\t\n\t                // Improve error logging\n\t                if (logEntry.error instanceof Error) {\n\t                    if (typeof logEntry.message === UNDEFINED) {\n\t                        logEntry.message = logEntry.error.message;\n\t                    }\n\t                    if (logEntry.error.originalError instanceof window.Error) {\n\t                        logEntry.original = logEntry.error.originalError.message;\n\t                        if (typeof logEntry.error.originalError.stack === STRING) { // To care for an exception in PhantomJS\n\t                            logEntry.stack = logEntry.error.originalError.stack.replace(LINEFEEDS, LINESEP);\n\t                        }\n\t                    } else {\n\t                        if (typeof logEntry.error.stack === STRING) { // To care for an exception in PhantomJS\n\t                            logEntry.stack = logEntry.error.stack.replace(LINEFEEDS, LINESEP);\n\t                        }\n\t                    }\n\t                }\n\t\n\t                // Add module\n\t                logEntry.module = typeof module === STRING ? module : UNDEFINED;\n\t\n\t                // Add level\n\t                level = String(level).toUpperCase();\n\t                logEntry.level = Object.keys(LEVELS).indexOf(level) > -1 ? level : DEFAULT.NAME;\n\t\n\t                // If there is a hidden input field named `trace` on the page, read it and add it\n\t                var input = document.getElementById('trace');\n\t                if (input instanceof HTMLInputElement && input.type === 'hidden') {\n\t                    logEntry.trace = input.value;\n\t                }\n\t            }\n\t\n\t            /* This function has too many statements. */\n\t            /* jshint -W071 */\n\t\n\t            /* This function's cyclomatic complexity is too high. */\n\t            /* jshint -W074 */\n\t\n\t            /**\n\t             * Print a formatted log entry to the console\n\t             * @param logEntry\n\t             * @private\n\t             */\n\t            function log2Console(logEntry) {\n\t                /* jshint maxcomplexity: 22 */\n\t                /* jshint maxstatements: 32 */\n\t                var console = window.console;\n\t                if (app.DEBUG && console && typeof console.log === FUNCTION) {\n\t                    var message = '[' + logEntry.level + (logEntry.level.length === 4 ? ' ' : '') + ']';\n\t                    var first = true;\n\t                    if (logEntry.message) {\n\t                        message += (first ? FIRST : SEPARATOR) + 'message' + EQUAL + logEntry.message;\n\t                        first = false;\n\t                    }\n\t                    if (logEntry.original) {\n\t                        message += (first ? FIRST : SEPARATOR) + 'original' + EQUAL + logEntry.original;\n\t                        first = false;\n\t                    }\n\t                    if (logEntry.module) {\n\t                        message += (first ? FIRST : SEPARATOR) + 'module' + EQUAL + logEntry.module;\n\t                        first = false;\n\t                    }\n\t                    if (logEntry.method) {\n\t                        message += (first ? FIRST : SEPARATOR) + 'method' + EQUAL + logEntry.method;\n\t                        first = false;\n\t                    }\n\t                    if (logEntry.stack) {\n\t                        message += (first ? FIRST : SEPARATOR) + 'stack' + EQUAL + logEntry.stack;\n\t                        first = false;\n\t                    }\n\t                    if (logEntry.data) {\n\t                        try {\n\t                            message += (first ? FIRST : SEPARATOR) + 'data' + EQUAL + JSON.stringify(logEntry.data);\n\t                        } catch (exception) {\n\t                            if (typeof logEntry.data.toString === FUNCTION) {\n\t                                message += (first ? FIRST : SEPARATOR) + 'data' + EQUAL + logEntry.data.toString();\n\t                            }\n\t                        }\n\t                    }\n\t                    if (logEntry.trace) {\n\t                        message += (first ? FIRST : SEPARATOR) + 'trace' + EQUAL + logEntry.trace;\n\t                        first = false;\n\t                    }\n\t                    console.log(message);\n\t                    if (logEntry.error instanceof Error) {\n\t                        if (typeof window.console.error === FUNCTION) {\n\t                            window.console.error(logEntry.error);\n\t                        }\n\t                    }\n\t                    if (logEntry.originalError instanceof Error) {\n\t                        if (typeof window.console.error === FUNCTION) {\n\t                            window.console.error(logEntry.originalError);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t\n\t            /* jshint +W074 */\n\t            /* jshint +W071 */\n\t\n\t            /**\n\t             * Log message\n\t             * @param level\n\t             * @param message\n\t             * @param data\n\t             */\n\t            this.log = function (level, message, data) {\n\t                level = String(level).toUpperCase();\n\t                if (Object.keys(LEVELS).indexOf(level) === -1) {\n\t                    throw new TypeError('level is either `debug`, `info`, `warn`, `error` or `crit`');\n\t                }\n\t                if (this.level > LEVELS[level].VALUE) {\n\t                    return false;\n\t                }\n\t                var logEntry = preProcess(message, data);\n\t                enhance(logEntry, this._module, level);\n\t                log2Console(logEntry, level);\n\t                var logger = app.logger;\n\t                if (logger && typeof logger['_' + level.toLowerCase()] === FUNCTION) {\n\t                    logger['_' + level.toLowerCase()](logEntry);\n\t                }\n\t                return true;\n\t            };\n\t\n\t            /**\n\t             * Debug message\n\t             * @param message\n\t             * @param data\n\t             */\n\t            this.debug = function (message, data) {\n\t                return this.log(LEVELS.DEBUG.NAME, message, data);\n\t            };\n\t\n\t            /**\n\t             * Info message\n\t             * @param message\n\t             * @param data\n\t             */\n\t            this.info = function (message, data) {\n\t                return this.log(LEVELS.INFO.NAME, message, data);\n\t            };\n\t\n\t            /**\n\t             * Warning message\n\t             * @param message\n\t             * @param data\n\t             */\n\t            this.warn = function (message, data) {\n\t                return this.log(LEVELS.WARN.NAME, message, data);\n\t            };\n\t\n\t            /**\n\t             * Error message\n\t             * @param message\n\t             * @param data\n\t             */\n\t            this.error = function (message, data) {\n\t                return this.log(LEVELS.ERROR.NAME, message, data);\n\t            };\n\t\n\t            /**\n\t             * Critical message\n\t             * @param message\n\t             * @param data\n\t             */\n\t            this.crit = function (message, data) {\n\t                return this.log(LEVELS.CRIT.NAME, message, data);\n\t            };\n\t\n\t        };\n\t\n\t        /**\n\t         * OnError global event handler\n\t         * @see https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror\n\t         * @param e\n\t         */\n\t        window.onerror = function (e) {\n\t            // TODO window.onerror = function(msg, url, line) {\n\t            var gl = new Logger('global');\n\t            gl.crit(e);\n\t        };\n\t\n\t    }());\n\t\n\t    return window.Logger;\n\t\n\t}, __webpack_require__(203));\n\n\n/***/ },\n\n/***/ 520:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n\t * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\r\n\t * Sources at https://github.com/Memba\r\n\t */\r\n\t\r\n\t/* jshint browser: true */\r\n\t/* globals define: false */\r\n\t\r\n\t(function(f, define){\r\n\t    'use strict';\r\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(200)\r\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t})(function(){\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    /**\r\n\t     * Note: This file is built with webpack using ./web_modules/jsx-loader.\r\n\t     * Values are read from any of the JSON config files in ./webapp/config\r\n\t     * depending on NODE_ENV: development, test or production (by default).\r\n\t     */\r\n\t\r\n\t    (function () {\r\n\t\r\n\t        var app = window.app = window.app || {},\r\n\t            logger = app.logger = app.logger || {};\r\n\t\r\n\t        /**\r\n\t         * application DEBUG mode\r\n\t         * @type {boolean}\r\n\t         */\r\n\t        app.DEBUG = 'true'.toLowerCase() === 'true';\r\n\t\r\n\t        /**\r\n\t         * Logger token\r\n\t         */\r\n\t        app.logger.token = 'e78bac0b-377a-49e2-ad91-20bb4ec7cedc';\r\n\t\r\n\t        /**\r\n\t         * Get formatting strings for Kendo UI from nodejs\r\n\t         * where %s placeholders are replaced with {i} placeholders\r\n\t         */\r\n\t        function format(value) {\r\n\t            if ((value.match(/%s/g) || []).length > 5) {\r\n\t                throw new Error('app.config value has too many %s to format');\r\n\t            }\r\n\t            return value.replace(/%s/, '{0}').replace(/%s/, '{1}').replace(/%s/, '{2}').replace(/%s/, '{3}').replace(/%s/, '{4}');\r\n\t        }\r\n\t\r\n\t        /**\r\n\t         * Application URIs\r\n\t         * See /wepapp/middleware/locals.js\r\n\t         */\r\n\t        app.uris = {\r\n\t            cdn: {\r\n\t                default: 'https://d2rvsmwqptocm.cloudfront.net' + format('/images/%s'),\r\n\t                svg: {\r\n\t                    office: 'https://d2rvsmwqptocm.cloudfront.net' + format('/images/o_collection/svg/office/%s.svg'),\r\n\t                    white: 'https://d2rvsmwqptocm.cloudfront.net' + format('/images/o_collection/svg/white/%s.svg'),\r\n\t                    dark_grey: 'https://d2rvsmwqptocm.cloudfront.net' + format('/images/o_collection/svg/dark_grey/%s.svg')\r\n\t                }\r\n\t            },\r\n\t            webapp: {\r\n\t                home: 'http://localhost:3000' + format('/'),\r\n\t                feed:  'http://localhost:3000' + format('/%s/index.rss'),\r\n\t                sitemap:  'http://localhost:3000' + format('/%s/sitemap.xml'),\r\n\t                pages:  'http://localhost:3000' + format('/%s/%s'),\r\n\t                posts:  'http://localhost:3000' + format('/%s/posts/%s/%s/%s')\r\n\t            }\r\n\t        };\r\n\t\r\n\t    }());\r\n\t\r\n\t    return window.app;\r\n\t\r\n\t}, __webpack_require__(203));\r\n\n\n/***/ },\n\n/***/ 521:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n\t * Sources at https://github.com/Memba\n\t */\n\t\n\t/* jshint browser: true */\n\t/* globals define: false */\n\t\n\t(function(f, define){\n\t    'use strict';\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(200)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\t\n\t    'use strict';\n\t\n\t    var app = window.app,\n\t        logger = new window.Logger('app.support');\n\t\n\t    /**\n\t     * IMPORTANT\n\t     * Use the Build link below to update\n\t     */\n\t\n\t    /*!\n\t     * modernizr v3.0.0-alpha.3\n\t     * Build http://v3.modernizr.com/download/#-audio-canvas-csstransforms-csstransitions-draganddrop-hashchange-localstorage-sessionstorage-svg-touchevents-video-webworkers-dontmin\n\t     *\n\t     * Copyright (c)\n\t     *  Faruk Ates\n\t     *  Paul Irish\n\t     *  Alex Sexton\n\t     *  Ryan Seddon\n\t     *  Alexander Farkas\n\t     *  Patrick Kettner\n\t     *  Stu Cox\n\t     *  Richard Herrera\n\t\n\t     * MIT License\n\t     */\n\t\n\t    /*\n\t     * Modernizr tests which native CSS3 and HTML5 features are available in the\n\t     * current UA and makes the results available to you in two ways: as properties on\n\t     * a global `Modernizr` object, and as classes on the `<html>` element. This\n\t     * information allows you to progressively enhance your pages with a granular level\n\t     * of control over the experience.\n\t     */\n\t\n\t    (function(window, document, undefined){\n\t        var tests = [];\n\t\n\t\n\t        var ModernizrProto = {\n\t            // The current version, dummy\n\t            _version: '3.0.0-alpha.3',\n\t\n\t            // Any settings that don't work as separate modules\n\t            // can go in here as configuration.\n\t            _config: {\n\t                'classPrefix' : '',\n\t                'enableClasses' : true,\n\t                'enableJSClass' : true,\n\t                'usePrefixes' : true\n\t            },\n\t\n\t            // Queue of tests\n\t            _q: [],\n\t\n\t            // Stub these for people who are listening\n\t            on: function( test, cb ) {\n\t                // I don't really think people should do this, but we can\n\t                // safe guard it a bit.\n\t                // -- NOTE:: this gets WAY overridden in src/addTest for\n\t                // actual async tests. This is in case people listen to\n\t                // synchronous tests. I would leave it out, but the code\n\t                // to *disallow* sync tests in the real version of this\n\t                // function is actually larger than this.\n\t                var self = this;\n\t                setTimeout(function() {\n\t                    cb(self[test]);\n\t                }, 0);\n\t            },\n\t\n\t            addTest: function( name, fn, options ) {\n\t                tests.push({name : name, fn : fn, options : options });\n\t            },\n\t\n\t            addAsyncTest: function (fn) {\n\t                tests.push({name : null, fn : fn});\n\t            }\n\t        };\n\t\n\t\n\t\n\t        // Fake some of Object.create\n\t        // so we can force non test results\n\t        // to be non \"own\" properties.\n\t        var Modernizr = function(){};\n\t        Modernizr.prototype = ModernizrProto;\n\t\n\t        // Leak modernizr globally when you `require` it\n\t        // rather than force it here.\n\t        // Overwrite name so constructor name is nicer :D\n\t        Modernizr = new Modernizr();\n\t\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"Local Storage\",\n\t         \"property\": \"localstorage\",\n\t         \"caniuse\": \"namevalue-storage\",\n\t         \"tags\": [\"storage\"],\n\t         \"knownBugs\": [],\n\t         \"notes\": [],\n\t         \"warnings\": [],\n\t         \"polyfills\": [\n\t         \"joshuabell-polyfill\",\n\t         \"cupcake\",\n\t         \"storagepolyfill\",\n\t         \"amplifyjs\",\n\t         \"yui-cacheoffline\"\n\t         ]\n\t         }\n\t         !*/\n\t\n\t        // In FF4, if disabled, window.localStorage should === null.\n\t\n\t        // Normally, we could not test that directly and need to do a\n\t        //   `('localStorage' in window) && ` test first because otherwise Firefox will\n\t        //   throw bugzil.la/365772 if cookies are disabled\n\t\n\t        // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n\t        // will throw the exception:\n\t        //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n\t        // Peculiarly, getItem and removeItem calls do not throw.\n\t\n\t        // Because we are forced to try/catch this, we'll go aggressive.\n\t\n\t        // Just FWIW: IE8 Compat mode supports these features completely:\n\t        //   www.quirksmode.org/dom/html5.html\n\t        // But IE8 doesn't support either with local files\n\t\n\t        Modernizr.addTest('localstorage', function() {\n\t            var mod = 'modernizr';\n\t            try {\n\t                localStorage.setItem(mod, mod);\n\t                localStorage.removeItem(mod);\n\t                return true;\n\t            } catch(e) {\n\t                return false;\n\t            }\n\t        });\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"Session Storage\",\n\t         \"property\": \"sessionstorage\",\n\t         \"tags\": [\"storage\"],\n\t         \"polyfills\": [\"joshuabell-polyfill\", \"cupcake\", \"sessionstorage\"]\n\t         }\n\t         !*/\n\t\n\t        // Because we are forced to try/catch this, we'll go aggressive.\n\t\n\t        // Just FWIW: IE8 Compat mode supports these features completely:\n\t        //   www.quirksmode.org/dom/html5.html\n\t        // But IE8 doesn't support either with local files\n\t        Modernizr.addTest('sessionstorage', function() {\n\t            var mod = 'modernizr';\n\t            try {\n\t                sessionStorage.setItem(mod, mod);\n\t                sessionStorage.removeItem(mod);\n\t                return true;\n\t            } catch(e) {\n\t                return false;\n\t            }\n\t        });\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"SVG\",\n\t         \"property\": \"svg\",\n\t         \"caniuse\": \"svg\",\n\t         \"tags\": [\"svg\"],\n\t         \"authors\": [\"Erik Dahlstrom\"],\n\t         \"polyfills\": [\n\t         \"svgweb\",\n\t         \"raphael\",\n\t         \"amplesdk\",\n\t         \"canvg\",\n\t         \"svg-boilerplate\",\n\t         \"sie\",\n\t         \"dojogfx\",\n\t         \"fabricjs\"\n\t         ]\n\t         }\n\t         !*/\n\t        /* DOC\n\t         Detects support for SVG in `<embed>` or `<object>` elements.\n\t         */\n\t\n\t        Modernizr.addTest('svg', !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n\t\n\t\n\t        var classes = [];\n\t\n\t\n\t        /**\n\t         * is returns a boolean for if typeof obj is exactly type.\n\t         */\n\t        function is( obj, type ) {\n\t            return typeof obj === type;\n\t        }\n\t        ;\n\t\n\t        // Run through all tests and detect their support in the current UA.\n\t        function testRunner() {\n\t            var featureNames;\n\t            var feature;\n\t            var aliasIdx;\n\t            var result;\n\t            var nameIdx;\n\t            var featureName;\n\t            var featureNameSplit;\n\t\n\t            for ( var featureIdx in tests ) {\n\t                featureNames = [];\n\t                feature = tests[featureIdx];\n\t                // run the test, throw the return value into the Modernizr,\n\t                //   then based on that boolean, define an appropriate className\n\t                //   and push it into an array of classes we'll join later.\n\t                //\n\t                //   If there is no name, it's an 'async' test that is run,\n\t                //   but not directly added to the object. That should\n\t                //   be done with a post-run addTest call.\n\t                if ( feature.name ) {\n\t                    featureNames.push(feature.name.toLowerCase());\n\t\n\t                    if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n\t                        // Add all the aliases into the names list\n\t                        for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n\t                            featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n\t                        }\n\t                    }\n\t                }\n\t\n\t                // Run the test, or use the raw value if it's not a function\n\t                result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\t\n\t\n\t                // Set each of the names on the Modernizr object\n\t                for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n\t                    featureName = featureNames[nameIdx];\n\t                    // Support dot properties as sub tests. We don't do checking to make sure\n\t                    // that the implied parent tests have been added. You must call them in\n\t                    // order (either in the test, or make the parent test a dependency).\n\t                    //\n\t                    // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n\t                    // hashtag famous last words\n\t                    featureNameSplit = featureName.split('.');\n\t\n\t                    if (featureNameSplit.length === 1) {\n\t                        Modernizr[featureNameSplit[0]] = result;\n\t                    } else {\n\t                        // cast to a Boolean, if not one already\n\t                        /* jshint -W053 */\n\t                        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n\t                            Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n\t                        }\n\t\n\t                        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n\t                    }\n\t\n\t                    classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n\t                }\n\t            }\n\t        }\n\t\n\t        ;\n\t\n\t        var createElement = function() {\n\t            if (typeof document.createElement !== 'function') {\n\t                // This is the case in IE7, where the type of createElement is \"object\".\n\t                // For this reason, we cannot call apply() as Object is not a Function.\n\t                return document.createElement(arguments[0]);\n\t            } else {\n\t                return document.createElement.apply(document, arguments);\n\t            }\n\t        };\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"Canvas\",\n\t         \"property\": \"canvas\",\n\t         \"caniuse\": \"canvas\",\n\t         \"tags\": [\"canvas\", \"graphics\"],\n\t         \"polyfills\": [\"flashcanvas\", \"excanvas\", \"slcanvas\", \"fxcanvas\"]\n\t         }\n\t         !*/\n\t        /* DOC\n\t         Detects support for the `<canvas>` element for 2D drawing.\n\t         */\n\t\n\t        // On the S60 and BB Storm, getContext exists, but always returns undefined\n\t        // so we actually have to call getContext() to verify\n\t        // github.com/Modernizr/Modernizr/issues/issue/97/\n\t        Modernizr.addTest('canvas', function() {\n\t            var elem = createElement('canvas');\n\t            return !!(elem.getContext && elem.getContext('2d'));\n\t        });\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"Drag & Drop\",\n\t         \"property\": \"draganddrop\",\n\t         \"caniuse\": \"dragndrop\",\n\t         \"knownBugs\": [\"Mobile browsers like Android, iOS < 6, and Firefox OS technically support the APIs, but don't expose it to the end user, resulting in a false positive.\"],\n\t         \"notes\": [{\n\t         \"name\": \"W3C spec\",\n\t         \"href\": \"http://www.w3.org/TR/2010/WD-html5-20101019/dnd.html\"\n\t         }],\n\t         \"polyfills\": [\"dropfile\", \"moxie\", \"fileapi\"]\n\t         }\n\t         !*/\n\t        /* DOC\n\t         Detects support for native drag & drop of elements.\n\t         */\n\t\n\t        Modernizr.addTest('draganddrop', function() {\n\t            var div = createElement('div');\n\t            return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n\t        });\n\t\n\t        /*!\n\t         {\n\t         \"name\" : \"HTML5 Audio Element\",\n\t         \"property\": \"audio\",\n\t         \"tags\" : [\"html5\", \"audio\", \"media\"]\n\t         }\n\t         !*/\n\t        /* DOC\n\t         Detects the audio element\n\t         */\n\t\n\t        // This tests evaluates support of the audio element, as well as\n\t        // testing what types of content it supports.\n\t        //\n\t        // We're using the Boolean constructor here, so that we can extend the value\n\t        // e.g.  Modernizr.audio     // true\n\t        //       Modernizr.audio.ogg // 'probably'\n\t        //\n\t        // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n\t        //                     thx to NielsLeenheer and zcorpan\n\t\n\t        // Note: in some older browsers, \"no\" was a return value instead of empty string.\n\t        //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n\t        //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\t        Modernizr.addTest('audio', function() {\n\t            /* jshint -W053 */\n\t            var elem = createElement('audio');\n\t            var bool = false;\n\t\n\t            try {\n\t                if ( bool = !!elem.canPlayType ) {\n\t                    bool      = new Boolean(bool);\n\t                    bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n\t                    bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n\t                    bool.opus  = elem.canPlayType('audio/ogg; codecs=\"opus\"') .replace(/^no$/,'');\n\t\n\t                    // Mimetypes accepted:\n\t                    //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n\t                    //   bit.ly/iphoneoscodecs\n\t                    bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n\t                    bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n\t                    elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n\t                }\n\t            } catch(e) { }\n\t\n\t            return bool;\n\t        });\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"HTML5 Video\",\n\t         \"property\": \"video\",\n\t         \"caniuse\": \"video\",\n\t         \"tags\": [\"html5\"],\n\t         \"knownBugs\": [\n\t         \"Without QuickTime, `Modernizr.video.h264` will be `undefined`; http://github.com/Modernizr/Modernizr/issues/546\"\n\t         ],\n\t         \"polyfills\": [\n\t         \"html5media\",\n\t         \"mediaelementjs\",\n\t         \"sublimevideo\",\n\t         \"videojs\",\n\t         \"leanbackplayer\",\n\t         \"videoforeverybody\"\n\t         ]\n\t         }\n\t         !*/\n\t        /* DOC\n\t         Detects support for the video element, as well as testing what types of content it supports.\n\t\n\t         Subproperties are provided to describe support for `ogg`, `h264` and `webm` formats, e.g.:\n\t\n\t         ```javascript\n\t         Modernizr.video         // true\n\t         Modernizr.video.ogg     // 'probably'\n\t         ```\n\t         */\n\t\n\t        // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n\t        //                     thx to NielsLeenheer and zcorpan\n\t\n\t        // Note: in some older browsers, \"no\" was a return value instead of empty string.\n\t        //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n\t        //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\t\n\t        Modernizr.addTest('video', function() {\n\t            /* jshint -W053 */\n\t            var elem = createElement('video');\n\t            var bool = false;\n\t\n\t            // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n\t            try {\n\t                if ( bool = !!elem.canPlayType ) {\n\t                    bool = new Boolean(bool);\n\t                    bool.ogg = elem.canPlayType('video/ogg; codecs=\"theora\"').replace(/^no$/,'');\n\t\n\t                    // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n\t                    bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"').replace(/^no$/,'');\n\t\n\t                    bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n\t\n\t                    bool.vp9 = elem.canPlayType('video/webm; codecs=\"vp9\"').replace(/^no$/,'');\n\t\n\t                    bool.hls = elem.canPlayType('application/x-mpegURL; codecs=\"avc1.42E01E\"').replace(/^no$/,'');\n\t                }\n\t            } catch(e){}\n\t\n\t            return bool;\n\t        });\n\t\n\t\n\t        // Following spec is to expose vendor-specific style properties as:\n\t        //   elem.style.WebkitBorderRadius\n\t        // and the following would be incorrect:\n\t        //   elem.style.webkitBorderRadius\n\t\n\t        // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n\t        // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n\t        //   erik.eae.net/archives/2008/03/10/21.48.10/\n\t\n\t        // More here: github.com/Modernizr/Modernizr/issues/issue/21\n\t        var omPrefixes = 'Moz O ms Webkit';\n\t\n\t\n\t        var cssomPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.split(' ') : []);\n\t        ModernizrProto._cssomPrefixes = cssomPrefixes;\n\t\n\t\n\t        var domPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.toLowerCase().split(' ') : []);\n\t        ModernizrProto._domPrefixes = domPrefixes;\n\t\n\t\n\t        /**\n\t         * contains returns a boolean for if substr is found within str.\n\t         */\n\t        function contains( str, substr ) {\n\t            return !!~('' + str).indexOf(substr);\n\t        }\n\t\n\t        ;\n\t\n\t        // Helper function for converting kebab-case to camelCase,\n\t        // e.g. box-sizing -> boxSizing\n\t        function cssToDOM( name ) {\n\t            return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\n\t                return m1 + m2.toUpperCase();\n\t            }).replace(/^-/, '');\n\t        }\n\t        ;\n\t\n\t        // Change the function's scope.\n\t        function fnBind(fn, that) {\n\t            return function() {\n\t                return fn.apply(that, arguments);\n\t            };\n\t        }\n\t\n\t        ;\n\t\n\t        /**\n\t         * testDOMProps is a generic DOM property test; if a browser supports\n\t         *   a certain property, it won't return undefined for it.\n\t         */\n\t        function testDOMProps( props, obj, elem ) {\n\t            var item;\n\t\n\t            for ( var i in props ) {\n\t                if ( props[i] in obj ) {\n\t\n\t                    // return the property name as a string\n\t                    if (elem === false) return props[i];\n\t\n\t                    item = obj[props[i]];\n\t\n\t                    // let's bind a function\n\t                    if (is(item, 'function')) {\n\t                        // bind to obj unless overriden\n\t                        return fnBind(item, elem || obj);\n\t                    }\n\t\n\t                    // return the unbound function or obj or value\n\t                    return item;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        ;\n\t\n\t        /**\n\t         * Create our \"modernizr\" element that we do most feature tests on.\n\t         */\n\t        var modElem = {\n\t            elem : createElement('modernizr')\n\t        };\n\t\n\t        // Clean up this element\n\t        Modernizr._q.push(function() {\n\t            delete modElem.elem;\n\t        });\n\t\n\t\n\t\n\t        var mStyle = {\n\t            style : modElem.elem.style\n\t        };\n\t\n\t        // kill ref for gc, must happen before\n\t        // mod.elem is removed, so we unshift on to\n\t        // the front of the queue.\n\t        Modernizr._q.unshift(function() {\n\t            delete mStyle.style;\n\t        });\n\t\n\t\n\t\n\t        // Helper function for converting camelCase to kebab-case,\n\t        // e.g. boxSizing -> box-sizing\n\t        function domToCSS( name ) {\n\t            return name.replace(/([A-Z])/g, function(str, m1) {\n\t                return '-' + m1.toLowerCase();\n\t            }).replace(/^ms-/, '-ms-');\n\t        }\n\t        ;\n\t\n\t        var docElement = document.documentElement;\n\t\n\t\n\t        function getBody() {\n\t            // After page load injecting a fake body doesn't work so check if body exists\n\t            var body = document.body;\n\t\n\t            if(!body) {\n\t                // Can't use the real body create a fake one.\n\t                body = createElement('body');\n\t                body.fake = true;\n\t            }\n\t\n\t            return body;\n\t        }\n\t\n\t        ;\n\t\n\t        // Inject element with style element and some CSS rules\n\t        function injectElementWithStyles( rule, callback, nodes, testnames ) {\n\t            var mod = 'modernizr';\n\t            var style;\n\t            var ret;\n\t            var node;\n\t            var docOverflow;\n\t            var div = createElement('div');\n\t            var body = getBody();\n\t\n\t            if ( parseInt(nodes, 10) ) {\n\t                // In order not to give false positives we create a node for each test\n\t                // This also allows the method to scale for unspecified uses\n\t                while ( nodes-- ) {\n\t                    node = createElement('div');\n\t                    node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n\t                    div.appendChild(node);\n\t                }\n\t            }\n\t\n\t            // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n\t            // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n\t            // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n\t            // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n\t            // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n\t            style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n\t            div.id = mod;\n\t            // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n\t            // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n\t            (!body.fake ? div : body).innerHTML += style;\n\t            body.appendChild(div);\n\t            if ( body.fake ) {\n\t                // avoid crashing IE8, if background image is used\n\t                body.style.background = '';\n\t                // Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n\t                body.style.overflow = 'hidden';\n\t                docOverflow = docElement.style.overflow;\n\t                docElement.style.overflow = 'hidden';\n\t                docElement.appendChild(body);\n\t            }\n\t\n\t            ret = callback(div, rule);\n\t            // If this is done after page load we don't want to remove the body so check if body exists\n\t            if ( body.fake ) {\n\t                body.parentNode.removeChild(body);\n\t                docElement.style.overflow = docOverflow;\n\t                // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n\t                docElement.offsetHeight;\n\t            } else {\n\t                div.parentNode.removeChild(div);\n\t            }\n\t\n\t            return !!ret;\n\t\n\t        }\n\t\n\t        ;\n\t\n\t        // Function to allow us to use native feature detection functionality if available.\n\t        // Accepts a list of property names and a single value\n\t        // Returns `undefined` if native detection not available\n\t        function nativeTestProps ( props, value ) {\n\t            var i = props.length;\n\t            // Start with the JS API: http://www.w3.org/TR/css3-conditional/#the-css-interface\n\t            if ('CSS' in window && 'supports' in window.CSS) {\n\t                // Try every prefixed variant of the property\n\t                while (i--) {\n\t                    if (window.CSS.supports(domToCSS(props[i]), value)) {\n\t                        return true;\n\t                    }\n\t                }\n\t                return false;\n\t            }\n\t            // Otherwise fall back to at-rule (for Opera 12.x)\n\t            else if ('CSSSupportsRule' in window) {\n\t                // Build a condition string for every prefixed variant\n\t                var conditionText = [];\n\t                while (i--) {\n\t                    conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n\t                }\n\t                conditionText = conditionText.join(' or ');\n\t                return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function( node ) {\n\t                    return getComputedStyle(node, null).position == 'absolute';\n\t                });\n\t            }\n\t            return undefined;\n\t        }\n\t        ;\n\t\n\t        // testProps is a generic CSS / DOM property test.\n\t\n\t        // In testing support for a given CSS property, it's legit to test:\n\t        //    `elem.style[styleName] !== undefined`\n\t        // If the property is supported it will return an empty string,\n\t        // if unsupported it will return undefined.\n\t\n\t        // We'll take advantage of this quick test and skip setting a style\n\t        // on our modernizr element, but instead just testing undefined vs\n\t        // empty string.\n\t\n\t        // Property names can be provided in either camelCase or kebab-case.\n\t\n\t        function testProps( props, prefixed, value, skipValueTest ) {\n\t            skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\t\n\t            // Try native detect first\n\t            if (!is(value, 'undefined')) {\n\t                var result = nativeTestProps(props, value);\n\t                if(!is(result, 'undefined')) {\n\t                    return result;\n\t                }\n\t            }\n\t\n\t            // Otherwise do it properly\n\t            var afterInit, i, propsLength, prop, before;\n\t\n\t            // If we don't have a style element, that means\n\t            // we're running async or after the core tests,\n\t            // so we'll need to create our own elements to use\n\t            if ( !mStyle.style ) {\n\t                afterInit = true;\n\t                mStyle.modElem = createElement('modernizr');\n\t                mStyle.style = mStyle.modElem.style;\n\t            }\n\t\n\t            // Delete the objects if we\n\t            // we created them.\n\t            function cleanElems() {\n\t                if (afterInit) {\n\t                    delete mStyle.style;\n\t                    delete mStyle.modElem;\n\t                }\n\t            }\n\t\n\t            propsLength = props.length;\n\t            for ( i = 0; i < propsLength; i++ ) {\n\t                prop = props[i];\n\t                before = mStyle.style[prop];\n\t\n\t                if (contains(prop, '-')) {\n\t                    prop = cssToDOM(prop);\n\t                }\n\t\n\t                if ( mStyle.style[prop] !== undefined ) {\n\t\n\t                    // If value to test has been passed in, do a set-and-check test.\n\t                    // 0 (integer) is a valid property value, so check that `value` isn't\n\t                    // undefined, rather than just checking it's truthy.\n\t                    if (!skipValueTest && !is(value, 'undefined')) {\n\t\n\t                        // Needs a try catch block because of old IE. This is slow, but will\n\t                        // be avoided in most cases because `skipValueTest` will be used.\n\t                        try {\n\t                            mStyle.style[prop] = value;\n\t                        } catch (e) {}\n\t\n\t                        // If the property value has changed, we assume the value used is\n\t                        // supported. If `value` is empty string, it'll fail here (because\n\t                        // it hasn't changed), which matches how browsers have implemented\n\t                        // CSS.supports()\n\t                        if (mStyle.style[prop] != before) {\n\t                            cleanElems();\n\t                            return prefixed == 'pfx' ? prop : true;\n\t                        }\n\t                    }\n\t                    // Otherwise just return true, or the property name if this is a\n\t                    // `prefixed()` call\n\t                    else {\n\t                        cleanElems();\n\t                        return prefixed == 'pfx' ? prop : true;\n\t                    }\n\t                }\n\t            }\n\t            cleanElems();\n\t            return false;\n\t        }\n\t\n\t        ;\n\t\n\t        /**\n\t         * testPropsAll tests a list of DOM properties we want to check against.\n\t         *     We specify literally ALL possible (known and/or likely) properties on\n\t         *     the element including the non-vendor prefixed one, for forward-\n\t         *     compatibility.\n\t         */\n\t        function testPropsAll( prop, prefixed, elem, value, skipValueTest ) {\n\t\n\t            var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n\t                props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\t\n\t            // did they call .prefixed('boxSizing') or are we just testing a prop?\n\t            if(is(prefixed, 'string') || is(prefixed, 'undefined')) {\n\t                return testProps(props, prefixed, value, skipValueTest);\n\t\n\t                // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n\t            } else {\n\t                props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n\t                return testDOMProps(props, prefixed, elem);\n\t            }\n\t        }\n\t\n\t        // Modernizr.testAllProps() investigates whether a given style property,\n\t        //     or any of its vendor-prefixed variants, is recognized\n\t        // Note that the property names must be provided in the camelCase variant.\n\t        // Modernizr.testAllProps('boxSizing')\n\t        ModernizrProto.testAllProps = testPropsAll;\n\t\n\t\n\t\n\t        /**\n\t         * testAllProps determines whether a given CSS property, in some prefixed\n\t         * form, is supported by the browser. It can optionally be given a value; in\n\t         * which case testAllProps will only return true if the browser supports that\n\t         * value for the named property; this latter case will use native detection\n\t         * (via window.CSS.supports) if available. A boolean can be passed as a 3rd\n\t         * parameter to skip the value check when native detection isn't available,\n\t         * to improve performance when simply testing for support of a property.\n\t         *\n\t         * @param prop - String naming the property to test (either camelCase or\n\t         *               kebab-case)\n\t         * @param value - [optional] String of the value to test\n\t         * @param skipValueTest - [optional] Whether to skip testing that the value\n\t         *                        is supported when using non-native detection\n\t         *                        (default: false)\n\t         */\n\t        function testAllProps (prop, value, skipValueTest) {\n\t            return testPropsAll(prop, undefined, undefined, value, skipValueTest);\n\t        }\n\t        ModernizrProto.testAllProps = testAllProps;\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"CSS Transforms\",\n\t         \"property\": \"csstransforms\",\n\t         \"caniuse\": \"transforms2d\",\n\t         \"tags\": [\"css\"]\n\t         }\n\t         !*/\n\t\n\t        Modernizr.addTest('csstransforms', function() {\n\t            // Android < 3.0 is buggy, so we sniff and blacklist\n\t            // http://git.io/hHzL7w\n\t            return navigator.userAgent.indexOf('Android 2.') === -1 &&\n\t                testAllProps('transform', 'scale(1)', true);\n\t        });\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"CSS Transitions\",\n\t         \"property\": \"csstransitions\",\n\t         \"caniuse\": \"css-transitions\",\n\t         \"tags\": [\"css\"]\n\t         }\n\t         !*/\n\t\n\t        Modernizr.addTest('csstransitions', testAllProps('transition', 'all', true));\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"Web Workers\",\n\t         \"property\": \"webworkers\",\n\t         \"caniuse\" : \"webworkers\",\n\t         \"tags\": [\"performance\", \"workers\"],\n\t         \"notes\": [{\n\t         \"name\": \"W3C Reference\",\n\t         \"href\": \"http://www.w3.org/TR/workers/\"\n\t         }, {\n\t         \"name\": \"HTML5 Rocks article\",\n\t         \"href\": \"http://www.html5rocks.com/en/tutorials/workers/basics/\"\n\t         }, {\n\t         \"name\": \"MDN documentation\",\n\t         \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Guide/Performance/Using_web_workers\"\n\t         }],\n\t         \"polyfills\": [\"fakeworker\", \"html5shims\"]\n\t         }\n\t         !*/\n\t        /* DOC\n\t         Detects support for the basic `Worker` API from the Web Workers spec. Web Workers provide a simple means for web content to run scripts in background threads.\n\t         */\n\t\n\t        Modernizr.addTest('webworkers', 'Worker' in window);\n\t\n\t\n\t        // List of property values to set for css tests. See ticket #21\n\t        var prefixes = (ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : []);\n\t\n\t        // expose these for the plugin API. Look in the source for how to join() them against your input\n\t        ModernizrProto._prefixes = prefixes;\n\t\n\t\n\t\n\t        var testStyles = ModernizrProto.testStyles = injectElementWithStyles;\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"Touch Events\",\n\t         \"property\": \"touchevents\",\n\t         \"caniuse\" : \"touch\",\n\t         \"tags\": [\"media\", \"attribute\"],\n\t         \"notes\": [{\n\t         \"name\": \"Touch Events spec\",\n\t         \"href\": \"http://www.w3.org/TR/2013/WD-touch-events-20130124/\"\n\t         }],\n\t         \"warnings\": [\n\t         \"Indicates if the browser supports the Touch Events spec, and does not necessarily reflect a touchscreen device\"\n\t         ],\n\t         \"knownBugs\": [\n\t         \"False-positive on some configurations of Nokia N900\",\n\t         \"False-positive on some BlackBerry 6.0 builds – https://github.com/Modernizr/Modernizr/issues/372#issuecomment-3112695\"\n\t         ]\n\t         }\n\t         !*/\n\t        /* DOC\n\t         Indicates if the browser supports the W3C Touch Events API.\n\t\n\t         This *does not* necessarily reflect a touchscreen device:\n\t\n\t         * Older touchscreen devices only emulate mouse events\n\t         * Modern IE touch devices implement the Pointer Events API instead: use `Modernizr.pointerevents` to detect support for that\n\t         * Some browsers & OS setups may enable touch APIs when no touchscreen is connected\n\t         * Future browsers may implement other event models for touch interactions\n\t\n\t         See this article: [You Can't Detect A Touchscreen](http://www.stucox.com/blog/you-cant-detect-a-touchscreen/).\n\t\n\t         It's recommended to bind both mouse and touch/pointer events simultaneously – see [this HTML5 Rocks tutorial](http://www.html5rocks.com/en/mobile/touchandmouse/).\n\t\n\t         This test will also return `true` for Firefox 4 Multitouch support.\n\t         */\n\t\n\t        // Chrome (desktop) used to lie about its support on this, but that has since been rectified: http://crbug.com/36415\n\t        Modernizr.addTest('touchevents', function() {\n\t            var bool;\n\t            if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n\t                bool = true;\n\t            } else {\n\t                var query = ['@media (',prefixes.join('touch-enabled),('),'heartz',')','{#modernizr{top:9px;position:absolute}}'].join('');\n\t                testStyles(query, function( node ) {\n\t                    bool = node.offsetTop === 9;\n\t                });\n\t            }\n\t            return bool;\n\t        });\n\t\n\t\n\t        // isEventSupported determines if the given element supports the given event\n\t        // kangax.github.com/iseventsupported/\n\t        // github.com/Modernizr/Modernizr/pull/636\n\t        //\n\t        // Known incorrects:\n\t        //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n\t        //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n\t        var isEventSupported = (function (undefined) {\n\t\n\t            // Detect whether event support can be detected via `in`. Test on a DOM element\n\t            // using the \"blur\" event b/c it should always exist. bit.ly/event-detection\n\t            var needsFallback = !('onblur' in document.documentElement);\n\t\n\t            /**\n\t             * @param  {string|*}           eventName  is the name of an event to test for (e.g. \"resize\")\n\t             * @param  {(Object|string|*)=} element    is the element|document|window|tagName to test on\n\t             * @return {boolean}\n\t             */\n\t            function isEventSupportedInner( eventName, element ) {\n\t\n\t                var isSupported;\n\t                if ( !eventName ) { return false; }\n\t                if ( !element || typeof element === 'string' ) {\n\t                    element = createElement(element || 'div');\n\t                }\n\t\n\t                // Testing via the `in` operator is sufficient for modern browsers and IE.\n\t                // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and\n\t                // \"resize\", whereas `in` \"catches\" those.\n\t                eventName = 'on' + eventName;\n\t                isSupported = eventName in element;\n\t\n\t                // Fallback technique for old Firefox - bit.ly/event-detection\n\t                if ( !isSupported && needsFallback ) {\n\t                    if ( !element.setAttribute ) {\n\t                        // Switch to generic element if it lacks `setAttribute`.\n\t                        // It could be the `document`, `window`, or something else.\n\t                        element = createElement('div');\n\t                    }\n\t\n\t                    element.setAttribute(eventName, '');\n\t                    isSupported = typeof element[eventName] === 'function';\n\t\n\t                    if ( element[eventName] !== undefined ) {\n\t                        // If property was created, \"remove it\" by setting value to `undefined`.\n\t                        element[eventName] = undefined;\n\t                    }\n\t                    element.removeAttribute(eventName);\n\t                }\n\t\n\t                return isSupported;\n\t            }\n\t            return isEventSupportedInner;\n\t        })();\n\t\n\t\n\t\n\t        // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n\t        // Modernizr.hasEvent('gesturestart', elem)\n\t        var hasEvent = ModernizrProto.hasEvent = isEventSupported;\n\t\n\t        /*!\n\t         {\n\t         \"name\": \"Hashchange event\",\n\t         \"property\": \"hashchange\",\n\t         \"caniuse\": \"hashchange\",\n\t         \"tags\": [\"history\"],\n\t         \"notes\": [{\n\t         \"name\": \"MDN documentation\",\n\t         \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/window.onhashchange\"\n\t         }],\n\t         \"polyfills\": [\n\t         \"jquery-hashchange\",\n\t         \"moo-historymanager\",\n\t         \"jquery-ajaxy\",\n\t         \"hasher\",\n\t         \"shistory\"\n\t         ]\n\t         }\n\t         !*/\n\t        /* DOC\n\t         Detects support for the `hashchange` event, fired when the current location fragment changes.\n\t         */\n\t\n\t        Modernizr.addTest('hashchange', function() {\n\t            if (hasEvent('hashchange', window) === false) {\n\t                return false;\n\t            }\n\t\n\t            // documentMode logic from YUI to filter out IE8 Compat Mode\n\t            //   which false positives.\n\t            return (document.documentMode === undefined || document.documentMode > 7);\n\t        });\n\t\n\t\n\t        // Run each test\n\t        testRunner();\n\t\n\t        delete ModernizrProto.addTest;\n\t        delete ModernizrProto.addAsyncTest;\n\t\n\t        // Run the things that are supposed to run after the tests\n\t        for (var i = 0; i < Modernizr._q.length; i++) {\n\t            Modernizr._q[i]();\n\t        }\n\t\n\t        // Leak Modernizr namespace\n\t        window.Modernizr = Modernizr;\n\t\n\t    })(window, document);\n\t\n\t    app.support = window.Modernizr;\n\t\n\t    logger.info({\n\t        message: 'browser tested by Modernizr'\n\t        // method: 'none'\n\t    });\n\t\n\t    return window.app;\n\t\n\t}, __webpack_require__(203));\n\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** init.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://localhost:3000/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d74bf4a64a9911875d0e\n **/","/**\n * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n * Sources at https://github.com/Memba\n */\n\n/* jshint browser: true */\n/* globals require: false, process: false */\n\nif (typeof(require) === 'function') {\n    require('./app.config.jsx?env=' + process.env.NODE_ENV);\n    require('./app.logger.js');\n    require('./app.support.js');\n}\n\n// TODO Consider javascript disabled\n// TODO use app.support to display a message for older browsers\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../js/app.init.js\n ** module id = 0\n ** module chunks = 20\n **/","/**\n * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n * Sources at https://github.com/Memba\n */\n\n/* jshint browser: true */\n/* globals define: false */\n\n(function (f, define) {\n    'use strict';\n    define([\n        './vendor/logentries/le.js', // <-- Keep first\n        './window.assert',\n        './window.logger'\n    ], f);\n})(function (LE) {\n\n    'use strict';\n\n    // Depending how le.js is loaded\n    // We need `LE` for webpack and `window.LE` for grunt mocha\n    LE = LE || window.LE;\n\n    (function (undefined) {\n\n        var app = window.app = window.app || {};\n        var LEVELS = {\n            // See https://github.com/logentries/le_node#log-levels\n            DEBUG: { NAME: 'DEBUG', VALUE: 1 },\n            INFO: { NAME: 'INFO', VALUE: 2 },\n            WARN: { NAME: 'WARN', VALUE: 4 },\n            ERROR: { NAME: 'ERROR', VALUE: 5 },\n            CRIT: { NAME: 'CRIT', VALUE: 6 }\n        };\n        var DEFAULT = LEVELS.INFO;\n        var logger = app.logger = app.logger || {\n            token: 'e78bac0b-377a-49e2-ad91-20bb4ec7cedc', // Our localhost value (basically junk)\n            level: DEFAULT.VALUE\n        };\n\n        /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n\n        /**\n         * Intialize LogEntries\n         * @see https://logentries.com/doc/javascript/\n         * @see https://github.com/logentries/le_js\n         */\n        LE.init({\n            token: logger.token,\n            ssl: true,\n            /**\n             * Important: catchall: true is equivalent to setting window.onerror\n             * See https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror\n             */\n            catchall: false, // we have our own global handler in window.logger\n            trace: false, // not as good as our own trace\n            page_info: 'never', // does not work - see https://github.com/logentries/le_js/issues/41\n            print: false // let's print to the console ourselves in window.logger\n        });\n\n        /* jscs:enable requireCamelCaseOrUpperCaseIdentifiers */\n\n        /**\n         * IMPORTANT: the following functions are prefixed with underscores\n         * because they should not be called, i.e. always call window.logger\n         */\n\n        /**\n         * Log a debug entry\n         * @param entry\n         */\n        logger._debug = function (entry) {\n            if (logger.level > LEVELS.DEBUG.VALUE) {\n                return false;\n            }\n            setTimeout(function () {\n                // Note: LE has no debug logging as of June 2015\n                LE.log(entry);\n            }, 0);\n            return true;\n        };\n\n        /**\n         * Log an info entry\n         * @param entry\n         */\n        logger._info = function (entry) {\n            if (logger.level > LEVELS.INFO.VALUE) {\n                return false;\n            }\n            setTimeout(function () {\n                LE.info(entry);\n            }, 0);\n            return true;\n        };\n\n        /**\n         * Log a warn entry\n         * @param entry\n         */\n        logger._warn = function (entry) {\n            if (logger.level > LEVELS.WARN.VALUE) {\n                return false;\n            }\n            setTimeout(function () {\n                LE.warn(entry);\n            }, 0);\n            return true;\n        };\n\n        /**\n         * Log an error entry (the application can survive an error entry)\n         * @param entry\n         */\n        logger._error = function (entry) {\n            if (logger.level > LEVELS.ERROR.VALUE) {\n                return false;\n            }\n            setTimeout(function () {\n                LE.error(entry);\n            }, 0);\n            return true;\n        };\n\n        /**\n         * Log a critical entry (the application cannot survive a critical entry)\n         * @param entry\n         */\n        logger._crit = function (entry) {\n            if (logger.level > LEVELS.CRIT.VALUE) {\n                return false;\n            }\n            setTimeout(function () {\n                // Note: LE has no critical logging as of June 2015\n                LE.error(entry);\n            }, 0);\n            return true;\n        };\n\n    }());\n\n    return window.app;\n\n}, typeof define === 'function' && define.amd ? define : function (_, f) { 'use strict'; f(); });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../js/app.logger.js\n ** module id = 200\n ** module chunks = 20 24\n **/","/**\n * @license Copyright 2013 Logentries.\n * Please view license at https://raw.github.com/logentries/le_js/master/LICENSE\n */\n\n/*jslint browser:true*/\n/*global define, module, exports, console, global */\n\n/** @param {Object} window */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(function() {\n            return factory(root);\n        });\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        if (typeof global === 'object') {\n            // Browserify. The calling object `this` does not reference window.\n            // `global` and `this` are equivalent in Node, preferring global\n            // adds support for Browserify.\n            root = global;\n        }\n        module.exports = factory(root);\n    } else {\n        // Browser globals (root is window)\n        root.LE = factory(root);\n    }\n}(this, function (window) {\n    \"use strict\";\n    // cross-browser indexOf fix\n    var _indexOf = function (array, obj) {\n        for (var i = 0; i < array.length; i++) {\n            if (obj === array[i]) {\n                return i;\n            }\n        }\n        return -1;\n    };\n\n    // Obtain a browser-specific XHR object\n    var _getAjaxObject = function () {\n        if (typeof XDomainRequest !== \"undefined\") {\n            // We're using IE8/9\n            return new XDomainRequest();\n        }\n        return new XMLHttpRequest();\n    };\n\n    /**\n     * A single log event stream.\n     * @constructor\n     * @param {Object} options\n     */\n    function LogStream(options) {\n        /**\n         * @const\n         * @type {string} */\n        var _traceCode = options.trace ? (Math.random() + Math.PI).toString(36).substring(2, 10) : null;\n        /** @type {string} */\n        var _pageInfo = options.page_info;\n        /** @type {string} */\n        var _token = options.token;\n        /** @type {boolean} */\n        var _print = options.print;\n        /** @type {boolean} */\n        var _SSL = function() {\n            if (typeof XDomainRequest === \"undefined\") {\n                return options.ssl;\n            }\n            // If we're relying on XDomainRequest, we\n            // must adhere to the page's encryption scheme.\n            return window.location.protocol === \"https:\" ? true : false;\n        }();\n        /** @type {string} */\n        var _endpoint;\n        if (window.LEENDPOINT) {\n            _endpoint = window.LEENDPOINT;\n        } else {\n            _endpoint = \"js.logentries.com/v1\";\n        }\n        _endpoint = (_SSL ? \"https://\" : \"http://\") + _endpoint + \"/logs/\" + _token;\n\n        /**\n         * Flag to prevent further invocations on network err\n         ** @type {boolean} */\n        var _shouldCall = true;\n        /** @type {Array.<string>} */\n        var _backlog = [];\n        /** @type {boolean} */\n        var _active = false;\n        /** @type {boolean} */\n        var _sentPageInfo = false;\n\n        if (options.catchall) {\n            var oldHandler = window.onerror;\n            var newHandler = function(msg, url, line) {\n                _rawLog({error: msg, line: line, location: url}).level('ERROR').send();\n                if (oldHandler) {\n                    return oldHandler(msg, url, line);\n                } else {\n                    return false;\n                }\n            };\n            window.onerror = newHandler;\n        }\n\n        var _agentInfo = function() {\n            var nav = window.navigator || {doNotTrack: undefined};\n            var screen = window.screen || {};\n            var location = window.location || {};\n\n            return {\n              url: location.pathname,\n              referrer: document.referrer,\n              screen: {\n                width: screen.width,\n                height: screen.height\n              },\n              window: {\n                width: window.innerWidth,\n                height: window.innerHeight\n              },\n              browser: {\n                name: nav.appName,\n                version: nav.appVersion,\n                cookie_enabled: nav.cookieEnabled,\n                do_not_track: nav.doNotTrack\n              },\n              platform: nav.platform\n            };\n        };\n\n        var _getEvent = function() {\n            var raw = null;\n            var args = Array.prototype.slice.call(arguments);\n            if (args.length === 0) {\n                throw new Error(\"No arguments!\");\n            } else if (args.length === 1) {\n                raw = args[0];\n            } else {\n                // Handle a variadic overload,\n                // e.g. _rawLog(\"some text \", x, \" ...\", 1);\n              raw = args;\n            }\n            return raw;\n        };\n\n        // Single arg stops the compiler arity warning\n        var _rawLog = function(msg) {\n            var event = _getEvent.apply(this, arguments);\n\n            var data = {event: event};\n\n            // Add agent info if required\n            if (_pageInfo !== 'never') {\n                if (!_sentPageInfo || _pageInfo === 'per-entry') {\n                    _sentPageInfo = true;\n                    if (typeof event.screen === \"undefined\" &&\n                        typeof event.browser === \"undefined\")\n                      _rawLog(_agentInfo()).level('PAGE').send();\n                }\n            }\n\n            if (_traceCode) {\n                data.trace = _traceCode;\n            }\n\n            return {level: function(l) {\n                // Don't log PAGE events to console\n                // PAGE events are generated for the agentInfo function\n                    if (_print && typeof console !== \"undefined\" && l !== 'PAGE') {\n                      var serialized = null;\n                      if (typeof XDomainRequest !== \"undefined\") {\n                        // We're using IE8/9\n                        serialized = data.trace + ' ' + data.event;\n                      }\n                      try {\n                        console[l.toLowerCase()].call(console, (serialized || data));\n                      } catch (ex) {\n                        // IE compat fix\n                        console.log((serialized || data));\n                      }\n                    }\n                    data.level = l;\n\n                    return {send: function() {\n                        var cache = [];\n                        var serialized = JSON.stringify(data, function(key, value) {\n\n                              if (typeof value === \"undefined\") {\n                                return \"undefined\";\n                              } else if (typeof value === \"object\" && value !== null) {\n                                if (_indexOf(cache, value) !== -1) {\n                                  // We've seen this object before;\n                                  // return a placeholder instead to prevent\n                                  // cycles\n                                  return \"<?>\";\n                                }\n                                cache.push(value);\n                              }\n                          return value;\n                        });\n\n                            if (_active) {\n                                _backlog.push(serialized);\n                            } else {\n                                _apiCall(_token, serialized);\n                            }\n                        }};\n                }};\n        };\n\n        /** @expose */\n        this.log = _rawLog;\n\n        var _apiCall = function(token, data) {\n            _active = true;\n\n            var request = _getAjaxObject();\n\n            if (_shouldCall) {\n                if (request.constructor === XMLHttpRequest) {\n                    // Currently we don't support fine-grained error\n                    // handling in older versions of IE\n                    request.onreadystatechange = function() {\n                    if (request.readyState === 4) {\n                        // Handle any errors\n                        if (request.status >= 400) {\n                            console.error(\"Couldn't submit events.\");\n                            if (request.status === 410) {\n                                // This API version has been phased out\n                                console.warn(\"This version of le_js is no longer supported!\");\n                            }\n                        } else {\n                            if (request.status === 301) {\n                                // Server issued a deprecation warning\n                                console.warn(\"This version of le_js is deprecated! Consider upgrading.\");\n                            }\n                            if (_backlog.length > 0) {\n                                // Submit the next event in the backlog\n                                _apiCall(token, _backlog.shift());\n                            } else {\n                                _active = false;\n                            }\n                        }\n                    }\n\n                    };\n                } else {\n                  request.onload = function() {\n                    if (_backlog.length > 0) {\n                      // Submit the next event in the backlog\n                      _apiCall(token, _backlog.shift());\n                    } else {\n                      _active = false;\n                    }\n                  };\n                }\n\n                request.open(\"POST\", _endpoint, true);\n                if (request.constructor === XMLHttpRequest) {\n                    request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n                    request.setRequestHeader('Content-type', 'application/json');\n                }\n                \n                if (request.overrideMimeType) {\n                    request.overrideMimeType('text');\n                }\n\n                request.send(data);\n            }\n        };\n    }\n\n    /**\n     * A single log object\n     * @constructor\n     * @param {Object} options\n     */\n    function Logger(options) {\n        var logger;\n\n        // Default values\n        var dict = {\n            ssl: true,\n            catchall: false,\n            trace: true,\n            page_info: 'never',\n            print: false,\n            endpoint: null,\n            token: null\n        };\n\n        if (typeof options === \"object\")\n            for (var k in options)\n                dict[k] = options[k];\n        else\n            throw new Error(\"Invalid parameters for createLogStream()\");\n\n        if (dict.token === null) {\n            throw new Error(\"Token not present.\");\n        } else {\n            logger = new LogStream(dict);\n        }\n\n        var _log = function(msg) {\n            if (logger) {\n                return logger.log.apply(this, arguments);\n            } else\n                throw new Error(\"You must call LE.init(...) first.\");\n        };\n\n         // The public interface\n        return {\n            log: function() {\n                _log.apply(this, arguments).level('LOG').send();\n            },\n            warn: function() {\n                _log.apply(this, arguments).level('WARN').send();\n            },\n            error: function() {\n                _log.apply(this, arguments).level('ERROR').send();\n            },\n            info: function() {\n                _log.apply(this, arguments).level('INFO').send();\n            }\n        };\n    }\n\n    // Array of Logger elements\n    var loggers = {};\n\n    var _getLogger = function(name) {\n        if (!loggers.hasOwnProperty(name))\n           throw new Error(\"Invalid name for logStream\");\n\n        return loggers[name];\n    };\n\n    var  _createLogStream = function(options) {\n        if (typeof options.name !== \"string\")\n            throw new Error(\"Name not present.\");\n        else if (loggers.hasOwnProperty(options.name))\n            throw new Error(\"A logger with that name already exists!\");\n        loggers[options.name] = new Logger(options);\n\n        return true;\n    };\n\n    var _deprecatedInit = function(options) {\n        var dict = {\n            name : \"default\"\n        };\n\n        if (typeof options === \"object\")\n            for (var k in options)\n                dict[k] = options[k];\n        else if (typeof options === \"string\")\n            dict.token = options;\n        else\n            throw new Error(\"Invalid parameters for init()\");\n\n        return _createLogStream(dict);\n    };\n\n    var _destroyLogStream = function(name) {\n        if (typeof name === 'undefined'){\n            name = 'default';\n        }\n\n        delete loggers[name];\n    };\n\n    // The public interface\n    return {\n        init: _deprecatedInit,\n        createLogStream: _createLogStream,\n        to: _getLogger,\n        destroy: _destroyLogStream,\n        log: function() {\n            for (var k in loggers)\n                loggers[k].log.apply(this, arguments);\n        },\n        warn: function() {\n            for (var k in loggers)\n                loggers[k].warn.apply(this, arguments);\n        },\n        error: function() {\n            for (var k in loggers)\n                loggers[k].error.apply(this, arguments);\n        },\n        info: function() {\n            for (var k in loggers)\n                loggers[k].info.apply(this, arguments);\n        }\n    };\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../js/vendor/logentries/le.js\n ** module id = 201\n ** module chunks = 20 24\n **/","/**\n * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n * Sources at https://github.com/Memba\n */\n\n/* jshint browser: true, jquery: true */\n/* globals define: false */\n\n(function (f, define) {\n    'use strict';\n    define([], f);\n})(function () {\n\n    'use strict';\n\n    (function (undefined) {\n\n        var STRING = 'string';\n        var OBJECT = 'object';\n        var FUNCTION = 'function';\n        var UNDEFINED = 'undefined';\n\n        // Populate the class2type map\n        var class2type = {};\n        'Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' ').forEach(function (name) {\n            class2type[ '[object ' + name + ']' ] = name.toLowerCase();\n        });\n        var toString = class2type.toString;\n        var hasOwn = class2type.hasOwnProperty;\n\n        // jQuery core functions to remove any dependencies\n        // @see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/core.js\n        var $ = {\n            isArray: Array.isArray,\n            isFunction: function (obj) {\n                return $.type(obj) === FUNCTION;\n            },\n            isEmptyObject: function (obj) {\n                var name;\n                for (name in obj) {\n                    return false;\n                }\n                return true;\n            },\n            isNumeric: function (obj) {\n                // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n                // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n                // subtraction forces infinities to NaN\n                // adding 1 corrects loss of precision from parseFloat (#15100)\n                return !$.isArray(obj) && (obj - parseFloat(obj) + 1) >= 0;\n            },\n            isPlainObject: function (obj) {\n                // Not plain objects:\n                // - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n                // - DOM nodes\n                // - window\n                if ($.type(obj) !== OBJECT || obj.nodeType || $.isWindow(obj)) {\n                    return false;\n                }\n                if (obj.constructor && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n                    return false;\n                }\n                // If the function hasn't returned already, we're confident that\n                // |obj| is a plain object, created by {} or constructed with new Object\n                return true;\n            },\n            isWindow: function (obj) {\n                return obj !== null && obj === obj.window;\n            },\n            type: function (obj) {\n                if (obj === null) {\n                    return obj + '';\n                }\n                // Support: Android<4.0 (functionish RegExp)\n                return typeof obj === OBJECT || typeof obj === FUNCTION ? class2type[toString.call(obj)] || OBJECT : typeof obj;\n            }\n        };\n\n        /**\n         * Asserts\n         * Note: Use asserts where unmet conditions are independent from user entries, and\n         * developers should be warned that there is probably something unexpected in their code\n         */\n        var assert = window.assert = function (test, message) {\n            if (!test) { throw new Error(message); }\n        };\n\n        // By extending assert, we ensure we can call both assert() and assert.ok() for the same result (like in nodeJS)\n\n        /**\n         * Assert enumeration\n         * @param array\n         * @param value\n         * @param message\n         */\n        assert.enum = function (array, value, message) {\n            if (array.indexOf(value) === -1) {\n                throw new RangeError(message);\n            }\n        };\n\n        /**\n         * Assert equal\n         * @param expected\n         * @param actual\n         * @param message\n         */\n        assert.equal = function (expected, actual, message) {\n            if (expected !== actual) {\n                throw new RangeError(message);\n            }\n        };\n\n        /**\n         * Assert instance of\n         * @param Class\n         * @param value\n         * @param message\n         */\n        assert.instanceof = function (Class, value, message) {\n            if (!(value instanceof Class)) {\n                throw new TypeError(message);\n            }\n        };\n\n        /**\n         * Assert optional object (can be undefined but mot an empty object, i.e. {})\n         * @param value\n         * @param message\n         */\n        assert.isOptionalObject = function (value, message) {\n            if ($.type(value) !== UNDEFINED && (!$.isPlainObject(value) || $.isEmptyObject(value))) {\n                throw new TypeError(message);\n            }\n        };\n\n        /**\n         * Assert a plain object (not empty)\n         * @param value\n         * @param message\n         */\n        assert.isPlainObject = function (value, message) {\n            if (!$.isPlainObject(value) || $.isEmptyObject(value)) {\n                throw new TypeError(message);\n            }\n        };\n\n        /**\n         * Assert undefined\n         * @param value\n         * @param message\n         */\n        assert.isUndefined = function (value, message) {\n            if ($.type(value) !== UNDEFINED) {\n                throw new TypeError(message);\n            }\n        };\n\n        /**\n         * Assert regular expression match\n         * @param rx\n         * @param value\n         * @param message\n         */\n        assert.match = function (rx, value, message) {\n            if ($.type(value) !== STRING || !rx.test(value)) {\n                throw new RangeError(message);\n            }\n        };\n\n        /**\n         * Assert true condition\n         * @param test\n         * @param message\n         * @returns {*}\n         */\n        assert.ok = function (test, message) {\n            return assert(test, message);\n        };\n\n        /**\n         * Assert type\n         * @param type\n         * @param value\n         * @param message\n         */\n        assert.type = function (type, value, message) {\n            if ($.type(value) !== type) {\n                throw new TypeError(message);\n            }\n        };\n\n        assert.messages = {\n            enum: {\n                default: '`{0}` is expected to be any of `{1}`'\n            },\n            equal: {\n                default: '`{0}` is expected to equal `{1}`'\n            },\n            instanceof: {\n                default: '`{0}` is expected to be an instance of `{1}`'\n            },\n            isOptionalObject: {\n                default: '`{0}` is expected to be undefined or a plain object'\n            },\n            isPlainObject: {\n                default: '`{0}` is expected to be a plain object'\n            },\n            isUndefined: {\n                default: '`{0}` is expected to be undefined'\n            },\n            match: {\n                default: '`{0}` is expected to match `{1}`'\n            },\n            ok: {\n                default: 'A statement is expected to be true'\n            },\n            type: {\n                default: '`{0}` is expected to have type `{1}`'\n            }\n        };\n\n    }());\n\n    return window.assert;\n\n}, typeof define === 'function' && define.amd ? define : function (_, f) { 'use strict'; f(); });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../js/window.assert.js\n ** module id = 202\n ** module chunks = 20 24\n **/","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/buildin/amd-define.js\n ** module id = 203\n ** module chunks = 20 24\n **/","/**\n * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n * Sources at https://github.com/Memba\n */\n\n/* jshint browser: true, jquery: true */\n/* globals define: false */\n\n(function (f, define) {\n    'use strict';\n    define([], f);\n})(function () {\n\n    'use strict';\n\n    (function (undefined) {\n\n        var app = window.app = window.app || {};\n        var STRING = 'string';\n        var FUNCTION = 'function';\n        var UNDEFINED = 'undefined';\n        var LEVELS = {\n            // See https://github.com/logentries/le_node#log-levels\n            DEBUG: { NAME: 'DEBUG', VALUE: 1 },\n            INFO: { NAME: 'INFO', VALUE: 2 },\n            WARN: { NAME: 'WARN', VALUE: 4 },\n            ERROR: { NAME: 'ERROR', VALUE: 5 },\n            CRIT: { NAME: 'CRIT', VALUE: 6 }\n        };\n        var DEFAULT = LEVELS.INFO;\n        var LINEFEEDS = /\\n/g;\n        var LINESEP = '; ';\n        var EQUAL = ' = ';\n        var FIRST = '\\t';\n        var SEPARATOR = '\\t'; // '  |  ';\n\n        /**\n         * Logger class\n         * @class Logger\n         */\n        var Logger = window.Logger = function (module/*, appLogger*/) {\n\n            this._module = module;\n            this.level = DEFAULT.VALUE;\n\n            /**\n             * Preprocess message + data\n             * @param message\n             * @param data\n             */\n            function preProcess(message, data) {\n                if (typeof message !== STRING && typeof data !== UNDEFINED) {\n                    throw new TypeError('Unexpected data when message is not a string');\n                }\n                var logEntry;\n                if (typeof message === STRING) {\n                    logEntry = { message: message, data: data };\n                } else if (message instanceof window.Error) {\n                    logEntry = {\n                        message: message.message,\n                        error: message\n                    };\n                } else if (typeof window.ErrorEvent === FUNCTION && message instanceof window.ErrorEvent) {\n                    // window.ErrorEvent does not exist in PhantomJS\n                    logEntry = {\n                        message: message.message,\n                        data: { filename: message.filename, lineno: message.lineno, colno: message.colno },\n                        error: message.error\n                    };\n                } else if (Object.prototype.toString.call(message) === '[object Object]') {\n                    logEntry = JSON.parse(JSON.stringify(message));\n                    if (message.error instanceof Error) {\n                        // We need to do that because JSON.stringify(new Error('Oops)) === {}\n                        logEntry.error = message.error;\n                    }\n                } else {\n                    logEntry = { data: message };\n                }\n                return logEntry;\n            }\n\n            /**\n             * Enhance a log entry\n             * @param logEntry\n             * @param module\n             * @param level\n             */\n            function enhance(logEntry, module, level) {\n                if (Object.prototype.toString.call(logEntry) !== '[object Object]') {\n                    throw new TypeError('logEntry is expected to be an object');\n                }\n\n                // Improve error logging\n                if (logEntry.error instanceof Error) {\n                    if (typeof logEntry.message === UNDEFINED) {\n                        logEntry.message = logEntry.error.message;\n                    }\n                    if (logEntry.error.originalError instanceof window.Error) {\n                        logEntry.original = logEntry.error.originalError.message;\n                        if (typeof logEntry.error.originalError.stack === STRING) { // To care for an exception in PhantomJS\n                            logEntry.stack = logEntry.error.originalError.stack.replace(LINEFEEDS, LINESEP);\n                        }\n                    } else {\n                        if (typeof logEntry.error.stack === STRING) { // To care for an exception in PhantomJS\n                            logEntry.stack = logEntry.error.stack.replace(LINEFEEDS, LINESEP);\n                        }\n                    }\n                }\n\n                // Add module\n                logEntry.module = typeof module === STRING ? module : UNDEFINED;\n\n                // Add level\n                level = String(level).toUpperCase();\n                logEntry.level = Object.keys(LEVELS).indexOf(level) > -1 ? level : DEFAULT.NAME;\n\n                // If there is a hidden input field named `trace` on the page, read it and add it\n                var input = document.getElementById('trace');\n                if (input instanceof HTMLInputElement && input.type === 'hidden') {\n                    logEntry.trace = input.value;\n                }\n            }\n\n            /* This function has too many statements. */\n            /* jshint -W071 */\n\n            /* This function's cyclomatic complexity is too high. */\n            /* jshint -W074 */\n\n            /**\n             * Print a formatted log entry to the console\n             * @param logEntry\n             * @private\n             */\n            function log2Console(logEntry) {\n                /* jshint maxcomplexity: 22 */\n                /* jshint maxstatements: 32 */\n                var console = window.console;\n                if (app.DEBUG && console && typeof console.log === FUNCTION) {\n                    var message = '[' + logEntry.level + (logEntry.level.length === 4 ? ' ' : '') + ']';\n                    var first = true;\n                    if (logEntry.message) {\n                        message += (first ? FIRST : SEPARATOR) + 'message' + EQUAL + logEntry.message;\n                        first = false;\n                    }\n                    if (logEntry.original) {\n                        message += (first ? FIRST : SEPARATOR) + 'original' + EQUAL + logEntry.original;\n                        first = false;\n                    }\n                    if (logEntry.module) {\n                        message += (first ? FIRST : SEPARATOR) + 'module' + EQUAL + logEntry.module;\n                        first = false;\n                    }\n                    if (logEntry.method) {\n                        message += (first ? FIRST : SEPARATOR) + 'method' + EQUAL + logEntry.method;\n                        first = false;\n                    }\n                    if (logEntry.stack) {\n                        message += (first ? FIRST : SEPARATOR) + 'stack' + EQUAL + logEntry.stack;\n                        first = false;\n                    }\n                    if (logEntry.data) {\n                        try {\n                            message += (first ? FIRST : SEPARATOR) + 'data' + EQUAL + JSON.stringify(logEntry.data);\n                        } catch (exception) {\n                            if (typeof logEntry.data.toString === FUNCTION) {\n                                message += (first ? FIRST : SEPARATOR) + 'data' + EQUAL + logEntry.data.toString();\n                            }\n                        }\n                    }\n                    if (logEntry.trace) {\n                        message += (first ? FIRST : SEPARATOR) + 'trace' + EQUAL + logEntry.trace;\n                        first = false;\n                    }\n                    console.log(message);\n                    if (logEntry.error instanceof Error) {\n                        if (typeof window.console.error === FUNCTION) {\n                            window.console.error(logEntry.error);\n                        }\n                    }\n                    if (logEntry.originalError instanceof Error) {\n                        if (typeof window.console.error === FUNCTION) {\n                            window.console.error(logEntry.originalError);\n                        }\n                    }\n                }\n            }\n\n            /* jshint +W074 */\n            /* jshint +W071 */\n\n            /**\n             * Log message\n             * @param level\n             * @param message\n             * @param data\n             */\n            this.log = function (level, message, data) {\n                level = String(level).toUpperCase();\n                if (Object.keys(LEVELS).indexOf(level) === -1) {\n                    throw new TypeError('level is either `debug`, `info`, `warn`, `error` or `crit`');\n                }\n                if (this.level > LEVELS[level].VALUE) {\n                    return false;\n                }\n                var logEntry = preProcess(message, data);\n                enhance(logEntry, this._module, level);\n                log2Console(logEntry, level);\n                var logger = app.logger;\n                if (logger && typeof logger['_' + level.toLowerCase()] === FUNCTION) {\n                    logger['_' + level.toLowerCase()](logEntry);\n                }\n                return true;\n            };\n\n            /**\n             * Debug message\n             * @param message\n             * @param data\n             */\n            this.debug = function (message, data) {\n                return this.log(LEVELS.DEBUG.NAME, message, data);\n            };\n\n            /**\n             * Info message\n             * @param message\n             * @param data\n             */\n            this.info = function (message, data) {\n                return this.log(LEVELS.INFO.NAME, message, data);\n            };\n\n            /**\n             * Warning message\n             * @param message\n             * @param data\n             */\n            this.warn = function (message, data) {\n                return this.log(LEVELS.WARN.NAME, message, data);\n            };\n\n            /**\n             * Error message\n             * @param message\n             * @param data\n             */\n            this.error = function (message, data) {\n                return this.log(LEVELS.ERROR.NAME, message, data);\n            };\n\n            /**\n             * Critical message\n             * @param message\n             * @param data\n             */\n            this.crit = function (message, data) {\n                return this.log(LEVELS.CRIT.NAME, message, data);\n            };\n\n        };\n\n        /**\n         * OnError global event handler\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror\n         * @param e\n         */\n        window.onerror = function (e) {\n            // TODO window.onerror = function(msg, url, line) {\n            var gl = new Logger('global');\n            gl.crit(e);\n        };\n\n    }());\n\n    return window.Logger;\n\n}, typeof define === 'function' && define.amd ? define : function (_, f) { 'use strict'; f(); });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../js/window.logger.js\n ** module id = 204\n ** module chunks = 20 24\n **/","/**\r\n * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\r\n * Sources at https://github.com/Memba\r\n */\r\n\r\n/* jshint browser: true */\r\n/* globals define: false */\r\n\r\n(function(f, define){\r\n    'use strict';\r\n    define([\r\n        './app.logger'\r\n    ], f);\r\n})(function(){\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Note: This file is built with webpack using ./web_modules/jsx-loader.\r\n     * Values are read from any of the JSON config files in ./webapp/config\r\n     * depending on NODE_ENV: development, test or production (by default).\r\n     */\r\n\r\n    (function () {\r\n\r\n        var app = window.app = window.app || {},\r\n            logger = app.logger = app.logger || {};\r\n\r\n        /**\r\n         * application DEBUG mode\r\n         * @type {boolean}\r\n         */\r\n        app.DEBUG = 'true'.toLowerCase() === 'true';\r\n\r\n        /**\r\n         * Logger token\r\n         */\r\n        app.logger.token = 'e78bac0b-377a-49e2-ad91-20bb4ec7cedc';\r\n\r\n        /**\r\n         * Get formatting strings for Kendo UI from nodejs\r\n         * where %s placeholders are replaced with {i} placeholders\r\n         */\r\n        function format(value) {\r\n            if ((value.match(/%s/g) || []).length > 5) {\r\n                throw new Error('app.config value has too many %s to format');\r\n            }\r\n            return value.replace(/%s/, '{0}').replace(/%s/, '{1}').replace(/%s/, '{2}').replace(/%s/, '{3}').replace(/%s/, '{4}');\r\n        }\r\n\r\n        /**\r\n         * Application URIs\r\n         * See /wepapp/middleware/locals.js\r\n         */\r\n        app.uris = {\r\n            cdn: {\r\n                default: 'https://d2rvsmwqptocm.cloudfront.net' + format('/images/%s'),\r\n                svg: {\r\n                    office: 'https://d2rvsmwqptocm.cloudfront.net' + format('/images/o_collection/svg/office/%s.svg'),\r\n                    white: 'https://d2rvsmwqptocm.cloudfront.net' + format('/images/o_collection/svg/white/%s.svg'),\r\n                    dark_grey: 'https://d2rvsmwqptocm.cloudfront.net' + format('/images/o_collection/svg/dark_grey/%s.svg')\r\n                }\r\n            },\r\n            webapp: {\r\n                home: 'http://localhost:3000' + format('/'),\r\n                feed:  'http://localhost:3000' + format('/%s/index.rss'),\r\n                sitemap:  'http://localhost:3000' + format('/%s/sitemap.xml'),\r\n                pages:  'http://localhost:3000' + format('/%s/%s'),\r\n                posts:  'http://localhost:3000' + format('/%s/posts/%s/%s/%s')\r\n            }\r\n        };\r\n\r\n    }());\r\n\r\n    return window.app;\r\n\r\n}, typeof define === 'function' && define.amd ? define : function(_, f){ 'use strict'; f(); });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../js/app.config.jsx?env=development\n ** module id = 520\n ** module chunks = 20\n **/","/**\n * Copyright (c) 2013-2015 Memba Sarl. All rights reserved.\n * Sources at https://github.com/Memba\n */\n\n/* jshint browser: true */\n/* globals define: false */\n\n(function(f, define){\n    'use strict';\n    define([\n        './app.logger'\n    ], f);\n})(function(){\n\n    'use strict';\n\n    var app = window.app,\n        logger = new window.Logger('app.support');\n\n    /**\n     * IMPORTANT\n     * Use the Build link below to update\n     */\n\n    /*!\n     * modernizr v3.0.0-alpha.3\n     * Build http://v3.modernizr.com/download/#-audio-canvas-csstransforms-csstransitions-draganddrop-hashchange-localstorage-sessionstorage-svg-touchevents-video-webworkers-dontmin\n     *\n     * Copyright (c)\n     *  Faruk Ates\n     *  Paul Irish\n     *  Alex Sexton\n     *  Ryan Seddon\n     *  Alexander Farkas\n     *  Patrick Kettner\n     *  Stu Cox\n     *  Richard Herrera\n\n     * MIT License\n     */\n\n    /*\n     * Modernizr tests which native CSS3 and HTML5 features are available in the\n     * current UA and makes the results available to you in two ways: as properties on\n     * a global `Modernizr` object, and as classes on the `<html>` element. This\n     * information allows you to progressively enhance your pages with a granular level\n     * of control over the experience.\n     */\n\n    (function(window, document, undefined){\n        var tests = [];\n\n\n        var ModernizrProto = {\n            // The current version, dummy\n            _version: '3.0.0-alpha.3',\n\n            // Any settings that don't work as separate modules\n            // can go in here as configuration.\n            _config: {\n                'classPrefix' : '',\n                'enableClasses' : true,\n                'enableJSClass' : true,\n                'usePrefixes' : true\n            },\n\n            // Queue of tests\n            _q: [],\n\n            // Stub these for people who are listening\n            on: function( test, cb ) {\n                // I don't really think people should do this, but we can\n                // safe guard it a bit.\n                // -- NOTE:: this gets WAY overridden in src/addTest for\n                // actual async tests. This is in case people listen to\n                // synchronous tests. I would leave it out, but the code\n                // to *disallow* sync tests in the real version of this\n                // function is actually larger than this.\n                var self = this;\n                setTimeout(function() {\n                    cb(self[test]);\n                }, 0);\n            },\n\n            addTest: function( name, fn, options ) {\n                tests.push({name : name, fn : fn, options : options });\n            },\n\n            addAsyncTest: function (fn) {\n                tests.push({name : null, fn : fn});\n            }\n        };\n\n\n\n        // Fake some of Object.create\n        // so we can force non test results\n        // to be non \"own\" properties.\n        var Modernizr = function(){};\n        Modernizr.prototype = ModernizrProto;\n\n        // Leak modernizr globally when you `require` it\n        // rather than force it here.\n        // Overwrite name so constructor name is nicer :D\n        Modernizr = new Modernizr();\n\n\n        /*!\n         {\n         \"name\": \"Local Storage\",\n         \"property\": \"localstorage\",\n         \"caniuse\": \"namevalue-storage\",\n         \"tags\": [\"storage\"],\n         \"knownBugs\": [],\n         \"notes\": [],\n         \"warnings\": [],\n         \"polyfills\": [\n         \"joshuabell-polyfill\",\n         \"cupcake\",\n         \"storagepolyfill\",\n         \"amplifyjs\",\n         \"yui-cacheoffline\"\n         ]\n         }\n         !*/\n\n        // In FF4, if disabled, window.localStorage should === null.\n\n        // Normally, we could not test that directly and need to do a\n        //   `('localStorage' in window) && ` test first because otherwise Firefox will\n        //   throw bugzil.la/365772 if cookies are disabled\n\n        // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n        // will throw the exception:\n        //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n        // Peculiarly, getItem and removeItem calls do not throw.\n\n        // Because we are forced to try/catch this, we'll go aggressive.\n\n        // Just FWIW: IE8 Compat mode supports these features completely:\n        //   www.quirksmode.org/dom/html5.html\n        // But IE8 doesn't support either with local files\n\n        Modernizr.addTest('localstorage', function() {\n            var mod = 'modernizr';\n            try {\n                localStorage.setItem(mod, mod);\n                localStorage.removeItem(mod);\n                return true;\n            } catch(e) {\n                return false;\n            }\n        });\n\n        /*!\n         {\n         \"name\": \"Session Storage\",\n         \"property\": \"sessionstorage\",\n         \"tags\": [\"storage\"],\n         \"polyfills\": [\"joshuabell-polyfill\", \"cupcake\", \"sessionstorage\"]\n         }\n         !*/\n\n        // Because we are forced to try/catch this, we'll go aggressive.\n\n        // Just FWIW: IE8 Compat mode supports these features completely:\n        //   www.quirksmode.org/dom/html5.html\n        // But IE8 doesn't support either with local files\n        Modernizr.addTest('sessionstorage', function() {\n            var mod = 'modernizr';\n            try {\n                sessionStorage.setItem(mod, mod);\n                sessionStorage.removeItem(mod);\n                return true;\n            } catch(e) {\n                return false;\n            }\n        });\n\n        /*!\n         {\n         \"name\": \"SVG\",\n         \"property\": \"svg\",\n         \"caniuse\": \"svg\",\n         \"tags\": [\"svg\"],\n         \"authors\": [\"Erik Dahlstrom\"],\n         \"polyfills\": [\n         \"svgweb\",\n         \"raphael\",\n         \"amplesdk\",\n         \"canvg\",\n         \"svg-boilerplate\",\n         \"sie\",\n         \"dojogfx\",\n         \"fabricjs\"\n         ]\n         }\n         !*/\n        /* DOC\n         Detects support for SVG in `<embed>` or `<object>` elements.\n         */\n\n        Modernizr.addTest('svg', !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n\n\n        var classes = [];\n\n\n        /**\n         * is returns a boolean for if typeof obj is exactly type.\n         */\n        function is( obj, type ) {\n            return typeof obj === type;\n        }\n        ;\n\n        // Run through all tests and detect their support in the current UA.\n        function testRunner() {\n            var featureNames;\n            var feature;\n            var aliasIdx;\n            var result;\n            var nameIdx;\n            var featureName;\n            var featureNameSplit;\n\n            for ( var featureIdx in tests ) {\n                featureNames = [];\n                feature = tests[featureIdx];\n                // run the test, throw the return value into the Modernizr,\n                //   then based on that boolean, define an appropriate className\n                //   and push it into an array of classes we'll join later.\n                //\n                //   If there is no name, it's an 'async' test that is run,\n                //   but not directly added to the object. That should\n                //   be done with a post-run addTest call.\n                if ( feature.name ) {\n                    featureNames.push(feature.name.toLowerCase());\n\n                    if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n                        // Add all the aliases into the names list\n                        for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n                            featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n                        }\n                    }\n                }\n\n                // Run the test, or use the raw value if it's not a function\n                result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n\n                // Set each of the names on the Modernizr object\n                for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n                    featureName = featureNames[nameIdx];\n                    // Support dot properties as sub tests. We don't do checking to make sure\n                    // that the implied parent tests have been added. You must call them in\n                    // order (either in the test, or make the parent test a dependency).\n                    //\n                    // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n                    // hashtag famous last words\n                    featureNameSplit = featureName.split('.');\n\n                    if (featureNameSplit.length === 1) {\n                        Modernizr[featureNameSplit[0]] = result;\n                    } else {\n                        // cast to a Boolean, if not one already\n                        /* jshint -W053 */\n                        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n                            Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n                        }\n\n                        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n                    }\n\n                    classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n                }\n            }\n        }\n\n        ;\n\n        var createElement = function() {\n            if (typeof document.createElement !== 'function') {\n                // This is the case in IE7, where the type of createElement is \"object\".\n                // For this reason, we cannot call apply() as Object is not a Function.\n                return document.createElement(arguments[0]);\n            } else {\n                return document.createElement.apply(document, arguments);\n            }\n        };\n\n        /*!\n         {\n         \"name\": \"Canvas\",\n         \"property\": \"canvas\",\n         \"caniuse\": \"canvas\",\n         \"tags\": [\"canvas\", \"graphics\"],\n         \"polyfills\": [\"flashcanvas\", \"excanvas\", \"slcanvas\", \"fxcanvas\"]\n         }\n         !*/\n        /* DOC\n         Detects support for the `<canvas>` element for 2D drawing.\n         */\n\n        // On the S60 and BB Storm, getContext exists, but always returns undefined\n        // so we actually have to call getContext() to verify\n        // github.com/Modernizr/Modernizr/issues/issue/97/\n        Modernizr.addTest('canvas', function() {\n            var elem = createElement('canvas');\n            return !!(elem.getContext && elem.getContext('2d'));\n        });\n\n        /*!\n         {\n         \"name\": \"Drag & Drop\",\n         \"property\": \"draganddrop\",\n         \"caniuse\": \"dragndrop\",\n         \"knownBugs\": [\"Mobile browsers like Android, iOS < 6, and Firefox OS technically support the APIs, but don't expose it to the end user, resulting in a false positive.\"],\n         \"notes\": [{\n         \"name\": \"W3C spec\",\n         \"href\": \"http://www.w3.org/TR/2010/WD-html5-20101019/dnd.html\"\n         }],\n         \"polyfills\": [\"dropfile\", \"moxie\", \"fileapi\"]\n         }\n         !*/\n        /* DOC\n         Detects support for native drag & drop of elements.\n         */\n\n        Modernizr.addTest('draganddrop', function() {\n            var div = createElement('div');\n            return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n        });\n\n        /*!\n         {\n         \"name\" : \"HTML5 Audio Element\",\n         \"property\": \"audio\",\n         \"tags\" : [\"html5\", \"audio\", \"media\"]\n         }\n         !*/\n        /* DOC\n         Detects the audio element\n         */\n\n        // This tests evaluates support of the audio element, as well as\n        // testing what types of content it supports.\n        //\n        // We're using the Boolean constructor here, so that we can extend the value\n        // e.g.  Modernizr.audio     // true\n        //       Modernizr.audio.ogg // 'probably'\n        //\n        // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n        //                     thx to NielsLeenheer and zcorpan\n\n        // Note: in some older browsers, \"no\" was a return value instead of empty string.\n        //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n        //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n        Modernizr.addTest('audio', function() {\n            /* jshint -W053 */\n            var elem = createElement('audio');\n            var bool = false;\n\n            try {\n                if ( bool = !!elem.canPlayType ) {\n                    bool      = new Boolean(bool);\n                    bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n                    bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n                    bool.opus  = elem.canPlayType('audio/ogg; codecs=\"opus\"') .replace(/^no$/,'');\n\n                    // Mimetypes accepted:\n                    //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n                    //   bit.ly/iphoneoscodecs\n                    bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n                    bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n                    elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n                }\n            } catch(e) { }\n\n            return bool;\n        });\n\n        /*!\n         {\n         \"name\": \"HTML5 Video\",\n         \"property\": \"video\",\n         \"caniuse\": \"video\",\n         \"tags\": [\"html5\"],\n         \"knownBugs\": [\n         \"Without QuickTime, `Modernizr.video.h264` will be `undefined`; http://github.com/Modernizr/Modernizr/issues/546\"\n         ],\n         \"polyfills\": [\n         \"html5media\",\n         \"mediaelementjs\",\n         \"sublimevideo\",\n         \"videojs\",\n         \"leanbackplayer\",\n         \"videoforeverybody\"\n         ]\n         }\n         !*/\n        /* DOC\n         Detects support for the video element, as well as testing what types of content it supports.\n\n         Subproperties are provided to describe support for `ogg`, `h264` and `webm` formats, e.g.:\n\n         ```javascript\n         Modernizr.video         // true\n         Modernizr.video.ogg     // 'probably'\n         ```\n         */\n\n        // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n        //                     thx to NielsLeenheer and zcorpan\n\n        // Note: in some older browsers, \"no\" was a return value instead of empty string.\n        //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n        //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n        Modernizr.addTest('video', function() {\n            /* jshint -W053 */\n            var elem = createElement('video');\n            var bool = false;\n\n            // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n            try {\n                if ( bool = !!elem.canPlayType ) {\n                    bool = new Boolean(bool);\n                    bool.ogg = elem.canPlayType('video/ogg; codecs=\"theora\"').replace(/^no$/,'');\n\n                    // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n                    bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"').replace(/^no$/,'');\n\n                    bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n\n                    bool.vp9 = elem.canPlayType('video/webm; codecs=\"vp9\"').replace(/^no$/,'');\n\n                    bool.hls = elem.canPlayType('application/x-mpegURL; codecs=\"avc1.42E01E\"').replace(/^no$/,'');\n                }\n            } catch(e){}\n\n            return bool;\n        });\n\n\n        // Following spec is to expose vendor-specific style properties as:\n        //   elem.style.WebkitBorderRadius\n        // and the following would be incorrect:\n        //   elem.style.webkitBorderRadius\n\n        // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n        // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n        //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n        // More here: github.com/Modernizr/Modernizr/issues/issue/21\n        var omPrefixes = 'Moz O ms Webkit';\n\n\n        var cssomPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.split(' ') : []);\n        ModernizrProto._cssomPrefixes = cssomPrefixes;\n\n\n        var domPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.toLowerCase().split(' ') : []);\n        ModernizrProto._domPrefixes = domPrefixes;\n\n\n        /**\n         * contains returns a boolean for if substr is found within str.\n         */\n        function contains( str, substr ) {\n            return !!~('' + str).indexOf(substr);\n        }\n\n        ;\n\n        // Helper function for converting kebab-case to camelCase,\n        // e.g. box-sizing -> boxSizing\n        function cssToDOM( name ) {\n            return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\n                return m1 + m2.toUpperCase();\n            }).replace(/^-/, '');\n        }\n        ;\n\n        // Change the function's scope.\n        function fnBind(fn, that) {\n            return function() {\n                return fn.apply(that, arguments);\n            };\n        }\n\n        ;\n\n        /**\n         * testDOMProps is a generic DOM property test; if a browser supports\n         *   a certain property, it won't return undefined for it.\n         */\n        function testDOMProps( props, obj, elem ) {\n            var item;\n\n            for ( var i in props ) {\n                if ( props[i] in obj ) {\n\n                    // return the property name as a string\n                    if (elem === false) return props[i];\n\n                    item = obj[props[i]];\n\n                    // let's bind a function\n                    if (is(item, 'function')) {\n                        // bind to obj unless overriden\n                        return fnBind(item, elem || obj);\n                    }\n\n                    // return the unbound function or obj or value\n                    return item;\n                }\n            }\n            return false;\n        }\n\n        ;\n\n        /**\n         * Create our \"modernizr\" element that we do most feature tests on.\n         */\n        var modElem = {\n            elem : createElement('modernizr')\n        };\n\n        // Clean up this element\n        Modernizr._q.push(function() {\n            delete modElem.elem;\n        });\n\n\n\n        var mStyle = {\n            style : modElem.elem.style\n        };\n\n        // kill ref for gc, must happen before\n        // mod.elem is removed, so we unshift on to\n        // the front of the queue.\n        Modernizr._q.unshift(function() {\n            delete mStyle.style;\n        });\n\n\n\n        // Helper function for converting camelCase to kebab-case,\n        // e.g. boxSizing -> box-sizing\n        function domToCSS( name ) {\n            return name.replace(/([A-Z])/g, function(str, m1) {\n                return '-' + m1.toLowerCase();\n            }).replace(/^ms-/, '-ms-');\n        }\n        ;\n\n        var docElement = document.documentElement;\n\n\n        function getBody() {\n            // After page load injecting a fake body doesn't work so check if body exists\n            var body = document.body;\n\n            if(!body) {\n                // Can't use the real body create a fake one.\n                body = createElement('body');\n                body.fake = true;\n            }\n\n            return body;\n        }\n\n        ;\n\n        // Inject element with style element and some CSS rules\n        function injectElementWithStyles( rule, callback, nodes, testnames ) {\n            var mod = 'modernizr';\n            var style;\n            var ret;\n            var node;\n            var docOverflow;\n            var div = createElement('div');\n            var body = getBody();\n\n            if ( parseInt(nodes, 10) ) {\n                // In order not to give false positives we create a node for each test\n                // This also allows the method to scale for unspecified uses\n                while ( nodes-- ) {\n                    node = createElement('div');\n                    node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n                    div.appendChild(node);\n                }\n            }\n\n            // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n            // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n            // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n            // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n            // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n            style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n            div.id = mod;\n            // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n            // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n            (!body.fake ? div : body).innerHTML += style;\n            body.appendChild(div);\n            if ( body.fake ) {\n                // avoid crashing IE8, if background image is used\n                body.style.background = '';\n                // Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n                body.style.overflow = 'hidden';\n                docOverflow = docElement.style.overflow;\n                docElement.style.overflow = 'hidden';\n                docElement.appendChild(body);\n            }\n\n            ret = callback(div, rule);\n            // If this is done after page load we don't want to remove the body so check if body exists\n            if ( body.fake ) {\n                body.parentNode.removeChild(body);\n                docElement.style.overflow = docOverflow;\n                // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n                docElement.offsetHeight;\n            } else {\n                div.parentNode.removeChild(div);\n            }\n\n            return !!ret;\n\n        }\n\n        ;\n\n        // Function to allow us to use native feature detection functionality if available.\n        // Accepts a list of property names and a single value\n        // Returns `undefined` if native detection not available\n        function nativeTestProps ( props, value ) {\n            var i = props.length;\n            // Start with the JS API: http://www.w3.org/TR/css3-conditional/#the-css-interface\n            if ('CSS' in window && 'supports' in window.CSS) {\n                // Try every prefixed variant of the property\n                while (i--) {\n                    if (window.CSS.supports(domToCSS(props[i]), value)) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            // Otherwise fall back to at-rule (for Opera 12.x)\n            else if ('CSSSupportsRule' in window) {\n                // Build a condition string for every prefixed variant\n                var conditionText = [];\n                while (i--) {\n                    conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n                }\n                conditionText = conditionText.join(' or ');\n                return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function( node ) {\n                    return getComputedStyle(node, null).position == 'absolute';\n                });\n            }\n            return undefined;\n        }\n        ;\n\n        // testProps is a generic CSS / DOM property test.\n\n        // In testing support for a given CSS property, it's legit to test:\n        //    `elem.style[styleName] !== undefined`\n        // If the property is supported it will return an empty string,\n        // if unsupported it will return undefined.\n\n        // We'll take advantage of this quick test and skip setting a style\n        // on our modernizr element, but instead just testing undefined vs\n        // empty string.\n\n        // Property names can be provided in either camelCase or kebab-case.\n\n        function testProps( props, prefixed, value, skipValueTest ) {\n            skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\n            // Try native detect first\n            if (!is(value, 'undefined')) {\n                var result = nativeTestProps(props, value);\n                if(!is(result, 'undefined')) {\n                    return result;\n                }\n            }\n\n            // Otherwise do it properly\n            var afterInit, i, propsLength, prop, before;\n\n            // If we don't have a style element, that means\n            // we're running async or after the core tests,\n            // so we'll need to create our own elements to use\n            if ( !mStyle.style ) {\n                afterInit = true;\n                mStyle.modElem = createElement('modernizr');\n                mStyle.style = mStyle.modElem.style;\n            }\n\n            // Delete the objects if we\n            // we created them.\n            function cleanElems() {\n                if (afterInit) {\n                    delete mStyle.style;\n                    delete mStyle.modElem;\n                }\n            }\n\n            propsLength = props.length;\n            for ( i = 0; i < propsLength; i++ ) {\n                prop = props[i];\n                before = mStyle.style[prop];\n\n                if (contains(prop, '-')) {\n                    prop = cssToDOM(prop);\n                }\n\n                if ( mStyle.style[prop] !== undefined ) {\n\n                    // If value to test has been passed in, do a set-and-check test.\n                    // 0 (integer) is a valid property value, so check that `value` isn't\n                    // undefined, rather than just checking it's truthy.\n                    if (!skipValueTest && !is(value, 'undefined')) {\n\n                        // Needs a try catch block because of old IE. This is slow, but will\n                        // be avoided in most cases because `skipValueTest` will be used.\n                        try {\n                            mStyle.style[prop] = value;\n                        } catch (e) {}\n\n                        // If the property value has changed, we assume the value used is\n                        // supported. If `value` is empty string, it'll fail here (because\n                        // it hasn't changed), which matches how browsers have implemented\n                        // CSS.supports()\n                        if (mStyle.style[prop] != before) {\n                            cleanElems();\n                            return prefixed == 'pfx' ? prop : true;\n                        }\n                    }\n                    // Otherwise just return true, or the property name if this is a\n                    // `prefixed()` call\n                    else {\n                        cleanElems();\n                        return prefixed == 'pfx' ? prop : true;\n                    }\n                }\n            }\n            cleanElems();\n            return false;\n        }\n\n        ;\n\n        /**\n         * testPropsAll tests a list of DOM properties we want to check against.\n         *     We specify literally ALL possible (known and/or likely) properties on\n         *     the element including the non-vendor prefixed one, for forward-\n         *     compatibility.\n         */\n        function testPropsAll( prop, prefixed, elem, value, skipValueTest ) {\n\n            var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n                props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n            // did they call .prefixed('boxSizing') or are we just testing a prop?\n            if(is(prefixed, 'string') || is(prefixed, 'undefined')) {\n                return testProps(props, prefixed, value, skipValueTest);\n\n                // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n            } else {\n                props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n                return testDOMProps(props, prefixed, elem);\n            }\n        }\n\n        // Modernizr.testAllProps() investigates whether a given style property,\n        //     or any of its vendor-prefixed variants, is recognized\n        // Note that the property names must be provided in the camelCase variant.\n        // Modernizr.testAllProps('boxSizing')\n        ModernizrProto.testAllProps = testPropsAll;\n\n\n\n        /**\n         * testAllProps determines whether a given CSS property, in some prefixed\n         * form, is supported by the browser. It can optionally be given a value; in\n         * which case testAllProps will only return true if the browser supports that\n         * value for the named property; this latter case will use native detection\n         * (via window.CSS.supports) if available. A boolean can be passed as a 3rd\n         * parameter to skip the value check when native detection isn't available,\n         * to improve performance when simply testing for support of a property.\n         *\n         * @param prop - String naming the property to test (either camelCase or\n         *               kebab-case)\n         * @param value - [optional] String of the value to test\n         * @param skipValueTest - [optional] Whether to skip testing that the value\n         *                        is supported when using non-native detection\n         *                        (default: false)\n         */\n        function testAllProps (prop, value, skipValueTest) {\n            return testPropsAll(prop, undefined, undefined, value, skipValueTest);\n        }\n        ModernizrProto.testAllProps = testAllProps;\n\n        /*!\n         {\n         \"name\": \"CSS Transforms\",\n         \"property\": \"csstransforms\",\n         \"caniuse\": \"transforms2d\",\n         \"tags\": [\"css\"]\n         }\n         !*/\n\n        Modernizr.addTest('csstransforms', function() {\n            // Android < 3.0 is buggy, so we sniff and blacklist\n            // http://git.io/hHzL7w\n            return navigator.userAgent.indexOf('Android 2.') === -1 &&\n                testAllProps('transform', 'scale(1)', true);\n        });\n\n        /*!\n         {\n         \"name\": \"CSS Transitions\",\n         \"property\": \"csstransitions\",\n         \"caniuse\": \"css-transitions\",\n         \"tags\": [\"css\"]\n         }\n         !*/\n\n        Modernizr.addTest('csstransitions', testAllProps('transition', 'all', true));\n\n        /*!\n         {\n         \"name\": \"Web Workers\",\n         \"property\": \"webworkers\",\n         \"caniuse\" : \"webworkers\",\n         \"tags\": [\"performance\", \"workers\"],\n         \"notes\": [{\n         \"name\": \"W3C Reference\",\n         \"href\": \"http://www.w3.org/TR/workers/\"\n         }, {\n         \"name\": \"HTML5 Rocks article\",\n         \"href\": \"http://www.html5rocks.com/en/tutorials/workers/basics/\"\n         }, {\n         \"name\": \"MDN documentation\",\n         \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Guide/Performance/Using_web_workers\"\n         }],\n         \"polyfills\": [\"fakeworker\", \"html5shims\"]\n         }\n         !*/\n        /* DOC\n         Detects support for the basic `Worker` API from the Web Workers spec. Web Workers provide a simple means for web content to run scripts in background threads.\n         */\n\n        Modernizr.addTest('webworkers', 'Worker' in window);\n\n\n        // List of property values to set for css tests. See ticket #21\n        var prefixes = (ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : []);\n\n        // expose these for the plugin API. Look in the source for how to join() them against your input\n        ModernizrProto._prefixes = prefixes;\n\n\n\n        var testStyles = ModernizrProto.testStyles = injectElementWithStyles;\n\n        /*!\n         {\n         \"name\": \"Touch Events\",\n         \"property\": \"touchevents\",\n         \"caniuse\" : \"touch\",\n         \"tags\": [\"media\", \"attribute\"],\n         \"notes\": [{\n         \"name\": \"Touch Events spec\",\n         \"href\": \"http://www.w3.org/TR/2013/WD-touch-events-20130124/\"\n         }],\n         \"warnings\": [\n         \"Indicates if the browser supports the Touch Events spec, and does not necessarily reflect a touchscreen device\"\n         ],\n         \"knownBugs\": [\n         \"False-positive on some configurations of Nokia N900\",\n         \"False-positive on some BlackBerry 6.0 builds – https://github.com/Modernizr/Modernizr/issues/372#issuecomment-3112695\"\n         ]\n         }\n         !*/\n        /* DOC\n         Indicates if the browser supports the W3C Touch Events API.\n\n         This *does not* necessarily reflect a touchscreen device:\n\n         * Older touchscreen devices only emulate mouse events\n         * Modern IE touch devices implement the Pointer Events API instead: use `Modernizr.pointerevents` to detect support for that\n         * Some browsers & OS setups may enable touch APIs when no touchscreen is connected\n         * Future browsers may implement other event models for touch interactions\n\n         See this article: [You Can't Detect A Touchscreen](http://www.stucox.com/blog/you-cant-detect-a-touchscreen/).\n\n         It's recommended to bind both mouse and touch/pointer events simultaneously – see [this HTML5 Rocks tutorial](http://www.html5rocks.com/en/mobile/touchandmouse/).\n\n         This test will also return `true` for Firefox 4 Multitouch support.\n         */\n\n        // Chrome (desktop) used to lie about its support on this, but that has since been rectified: http://crbug.com/36415\n        Modernizr.addTest('touchevents', function() {\n            var bool;\n            if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n                bool = true;\n            } else {\n                var query = ['@media (',prefixes.join('touch-enabled),('),'heartz',')','{#modernizr{top:9px;position:absolute}}'].join('');\n                testStyles(query, function( node ) {\n                    bool = node.offsetTop === 9;\n                });\n            }\n            return bool;\n        });\n\n\n        // isEventSupported determines if the given element supports the given event\n        // kangax.github.com/iseventsupported/\n        // github.com/Modernizr/Modernizr/pull/636\n        //\n        // Known incorrects:\n        //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n        //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n        var isEventSupported = (function (undefined) {\n\n            // Detect whether event support can be detected via `in`. Test on a DOM element\n            // using the \"blur\" event b/c it should always exist. bit.ly/event-detection\n            var needsFallback = !('onblur' in document.documentElement);\n\n            /**\n             * @param  {string|*}           eventName  is the name of an event to test for (e.g. \"resize\")\n             * @param  {(Object|string|*)=} element    is the element|document|window|tagName to test on\n             * @return {boolean}\n             */\n            function isEventSupportedInner( eventName, element ) {\n\n                var isSupported;\n                if ( !eventName ) { return false; }\n                if ( !element || typeof element === 'string' ) {\n                    element = createElement(element || 'div');\n                }\n\n                // Testing via the `in` operator is sufficient for modern browsers and IE.\n                // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and\n                // \"resize\", whereas `in` \"catches\" those.\n                eventName = 'on' + eventName;\n                isSupported = eventName in element;\n\n                // Fallback technique for old Firefox - bit.ly/event-detection\n                if ( !isSupported && needsFallback ) {\n                    if ( !element.setAttribute ) {\n                        // Switch to generic element if it lacks `setAttribute`.\n                        // It could be the `document`, `window`, or something else.\n                        element = createElement('div');\n                    }\n\n                    element.setAttribute(eventName, '');\n                    isSupported = typeof element[eventName] === 'function';\n\n                    if ( element[eventName] !== undefined ) {\n                        // If property was created, \"remove it\" by setting value to `undefined`.\n                        element[eventName] = undefined;\n                    }\n                    element.removeAttribute(eventName);\n                }\n\n                return isSupported;\n            }\n            return isEventSupportedInner;\n        })();\n\n\n\n        // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n        // Modernizr.hasEvent('gesturestart', elem)\n        var hasEvent = ModernizrProto.hasEvent = isEventSupported;\n\n        /*!\n         {\n         \"name\": \"Hashchange event\",\n         \"property\": \"hashchange\",\n         \"caniuse\": \"hashchange\",\n         \"tags\": [\"history\"],\n         \"notes\": [{\n         \"name\": \"MDN documentation\",\n         \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/window.onhashchange\"\n         }],\n         \"polyfills\": [\n         \"jquery-hashchange\",\n         \"moo-historymanager\",\n         \"jquery-ajaxy\",\n         \"hasher\",\n         \"shistory\"\n         ]\n         }\n         !*/\n        /* DOC\n         Detects support for the `hashchange` event, fired when the current location fragment changes.\n         */\n\n        Modernizr.addTest('hashchange', function() {\n            if (hasEvent('hashchange', window) === false) {\n                return false;\n            }\n\n            // documentMode logic from YUI to filter out IE8 Compat Mode\n            //   which false positives.\n            return (document.documentMode === undefined || document.documentMode > 7);\n        });\n\n\n        // Run each test\n        testRunner();\n\n        delete ModernizrProto.addTest;\n        delete ModernizrProto.addAsyncTest;\n\n        // Run the things that are supposed to run after the tests\n        for (var i = 0; i < Modernizr._q.length; i++) {\n            Modernizr._q[i]();\n        }\n\n        // Leak Modernizr namespace\n        window.Modernizr = Modernizr;\n\n    })(window, document);\n\n    app.support = window.Modernizr;\n\n    logger.info({\n        message: 'browser tested by Modernizr'\n        // method: 'none'\n    });\n\n    return window.app;\n\n}, typeof define === 'function' && define.amd ? define : function(_, f){ 'use strict'; f(); });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../js/app.support.js\n ** module id = 521\n ** module chunks = 20\n **/"],"sourceRoot":""}